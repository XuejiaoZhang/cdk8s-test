{
  "author": {
    "name": "Amazon Web Services",
    "organization": true,
    "roles": [
      "author"
    ],
    "url": "https://aws.amazon.com"
  },
  "dependencies": {
    "@aws-cdk/aws-autoscaling": "1.27.0",
    "@aws-cdk/aws-cloudformation": "1.27.0",
    "@aws-cdk/aws-ec2": "1.27.0",
    "@aws-cdk/aws-iam": "1.27.0",
    "@aws-cdk/aws-lambda": "1.27.0",
    "@aws-cdk/aws-ssm": "1.27.0",
    "@aws-cdk/core": "1.27.0",
    "@aws-cdk/custom-resources": "1.27.0"
  },
  "dependencyClosure": {
    "@aws-cdk/assets": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.Assets",
          "packageId": "Amazon.CDK.Assets",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "cdk-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.assets"
        },
        "js": {
          "npm": "@aws-cdk/assets"
        },
        "python": {
          "distName": "aws-cdk.assets",
          "module": "aws_cdk.assets"
        }
      }
    },
    "@aws-cdk/aws-apigateway": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.APIGateway",
          "packageId": "Amazon.CDK.AWS.APIGateway",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "apigateway",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.apigateway"
        },
        "js": {
          "npm": "@aws-cdk/aws-apigateway"
        },
        "python": {
          "distName": "aws-cdk.aws-apigateway",
          "module": "aws_cdk.aws_apigateway"
        }
      }
    },
    "@aws-cdk/aws-applicationautoscaling": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ApplicationAutoScaling",
          "packageId": "Amazon.CDK.AWS.ApplicationAutoScaling",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "applicationautoscaling",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.applicationautoscaling"
        },
        "js": {
          "npm": "@aws-cdk/aws-applicationautoscaling"
        },
        "python": {
          "distName": "aws-cdk.aws-applicationautoscaling",
          "module": "aws_cdk.aws_applicationautoscaling"
        }
      }
    },
    "@aws-cdk/aws-autoscaling": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.AutoScaling",
          "packageId": "Amazon.CDK.AWS.AutoScaling",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "autoscaling",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.autoscaling"
        },
        "js": {
          "npm": "@aws-cdk/aws-autoscaling"
        },
        "python": {
          "distName": "aws-cdk.aws-autoscaling",
          "module": "aws_cdk.aws_autoscaling"
        }
      }
    },
    "@aws-cdk/aws-autoscaling-common": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.AutoScaling.Common",
          "packageId": "Amazon.CDK.AWS.AutoScaling.Common",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "autoscaling-common",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.autoscaling.common"
        },
        "js": {
          "npm": "@aws-cdk/aws-autoscaling-common"
        },
        "python": {
          "distName": "aws-cdk.aws-autoscaling-common",
          "module": "aws_cdk.aws_autoscaling_common"
        }
      }
    },
    "@aws-cdk/aws-autoscaling-hooktargets": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.AutoScaling.HookTargets",
          "packageId": "Amazon.CDK.AWS.AutoScaling.HookTargets",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "autoscaling-hooktargets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.autoscaling.hooktargets"
        },
        "js": {
          "npm": "@aws-cdk/aws-autoscaling-hooktargets"
        },
        "python": {
          "distName": "aws-cdk.aws-autoscaling-hooktargets",
          "module": "aws_cdk.aws_autoscaling_hooktargets"
        }
      }
    },
    "@aws-cdk/aws-certificatemanager": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CertificateManager",
          "packageId": "Amazon.CDK.AWS.CertificateManager",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "certificatemanager",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.certificatemanager"
        },
        "js": {
          "npm": "@aws-cdk/aws-certificatemanager"
        },
        "python": {
          "distName": "aws-cdk.aws-certificatemanager",
          "module": "aws_cdk.aws_certificatemanager"
        }
      }
    },
    "@aws-cdk/aws-cloudformation": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CloudFormation",
          "packageId": "Amazon.CDK.AWS.CloudFormation",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "cloudformation",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudformation"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudformation"
        },
        "python": {
          "distName": "aws-cdk.aws-cloudformation",
          "module": "aws_cdk.aws_cloudformation"
        }
      }
    },
    "@aws-cdk/aws-cloudfront": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CloudFront",
          "packageId": "Amazon.CDK.AWS.CloudFront",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "cloudfront",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudfront"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudfront"
        },
        "python": {
          "distName": "aws-cdk.aws-cloudfront",
          "module": "aws_cdk.aws_cloudfront"
        }
      }
    },
    "@aws-cdk/aws-cloudwatch": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CloudWatch",
          "packageId": "Amazon.CDK.AWS.CloudWatch",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "cloudwatch",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudwatch"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudwatch"
        },
        "python": {
          "distName": "aws-cdk.aws-cloudwatch",
          "module": "aws_cdk.aws_cloudwatch"
        }
      }
    },
    "@aws-cdk/aws-ec2": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.EC2",
          "packageId": "Amazon.CDK.AWS.EC2",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "ec2",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ec2"
        },
        "js": {
          "npm": "@aws-cdk/aws-ec2"
        },
        "python": {
          "distName": "aws-cdk.aws-ec2",
          "module": "aws_cdk.aws_ec2"
        }
      }
    },
    "@aws-cdk/aws-ecr": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ECR",
          "packageId": "Amazon.CDK.AWS.ECR",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "ecr",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ecr"
        },
        "js": {
          "npm": "@aws-cdk/aws-ecr"
        },
        "python": {
          "distName": "aws-cdk.aws-ecr",
          "module": "aws_cdk.aws_ecr"
        }
      }
    },
    "@aws-cdk/aws-ecr-assets": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Ecr.Assets",
          "packageId": "Amazon.CDK.ECR.Assets",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "ecr-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ecr.assets"
        },
        "js": {
          "npm": "@aws-cdk/aws-ecr-assets"
        },
        "python": {
          "distName": "aws-cdk.aws-ecr-assets",
          "module": "aws_cdk.aws_ecr_assets"
        }
      }
    },
    "@aws-cdk/aws-ecs": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ECS",
          "packageId": "Amazon.CDK.AWS.ECS",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "ecs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ecs"
        },
        "js": {
          "npm": "@aws-cdk/aws-ecs"
        },
        "python": {
          "distName": "aws-cdk.aws-ecs",
          "module": "aws_cdk.aws_ecs"
        }
      }
    },
    "@aws-cdk/aws-elasticloadbalancing": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ElasticLoadBalancing",
          "packageId": "Amazon.CDK.AWS.ElasticLoadBalancing",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "elasticloadbalancing",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.elasticloadbalancing"
        },
        "js": {
          "npm": "@aws-cdk/aws-elasticloadbalancing"
        },
        "python": {
          "distName": "aws-cdk.aws-elasticloadbalancing",
          "module": "aws_cdk.aws_elasticloadbalancing"
        }
      }
    },
    "@aws-cdk/aws-elasticloadbalancingv2": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ElasticLoadBalancingV2",
          "packageId": "Amazon.CDK.AWS.ElasticLoadBalancingV2",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "elasticloadbalancingv2",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.elasticloadbalancingv2"
        },
        "js": {
          "npm": "@aws-cdk/aws-elasticloadbalancingv2"
        },
        "python": {
          "distName": "aws-cdk.aws-elasticloadbalancingv2",
          "module": "aws_cdk.aws_elasticloadbalancingv2"
        }
      }
    },
    "@aws-cdk/aws-events": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Events",
          "packageId": "Amazon.CDK.AWS.Events",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "events",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.events"
        },
        "js": {
          "npm": "@aws-cdk/aws-events"
        },
        "python": {
          "distName": "aws-cdk.aws-events",
          "module": "aws_cdk.aws_events"
        }
      }
    },
    "@aws-cdk/aws-glue": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Glue",
          "packageId": "Amazon.CDK.AWS.Glue",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "glue",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.glue"
        },
        "js": {
          "npm": "@aws-cdk/aws-glue"
        },
        "python": {
          "distName": "aws-cdk.aws-glue",
          "module": "aws_cdk.aws_glue"
        }
      }
    },
    "@aws-cdk/aws-iam": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.IAM",
          "packageId": "Amazon.CDK.AWS.IAM",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "iam",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.iam"
        },
        "js": {
          "npm": "@aws-cdk/aws-iam"
        },
        "python": {
          "distName": "aws-cdk.aws-iam",
          "module": "aws_cdk.aws_iam"
        }
      }
    },
    "@aws-cdk/aws-kms": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.KMS",
          "packageId": "Amazon.CDK.AWS.KMS",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "kms",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.kms"
        },
        "js": {
          "npm": "@aws-cdk/aws-kms"
        },
        "python": {
          "distName": "aws-cdk.aws-kms",
          "module": "aws_cdk.aws_kms"
        }
      }
    },
    "@aws-cdk/aws-lambda": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Lambda",
          "packageId": "Amazon.CDK.AWS.Lambda",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "lambda",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.lambda"
        },
        "js": {
          "npm": "@aws-cdk/aws-lambda"
        },
        "python": {
          "distName": "aws-cdk.aws-lambda",
          "module": "aws_cdk.aws_lambda"
        }
      }
    },
    "@aws-cdk/aws-logs": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Logs",
          "packageId": "Amazon.CDK.AWS.Logs",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "logs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.logs"
        },
        "js": {
          "npm": "@aws-cdk/aws-logs"
        },
        "python": {
          "distName": "aws-cdk.aws-logs",
          "module": "aws_cdk.aws_logs"
        }
      }
    },
    "@aws-cdk/aws-route53": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Route53",
          "packageId": "Amazon.CDK.AWS.Route53",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "route53",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.route53"
        },
        "js": {
          "npm": "@aws-cdk/aws-route53"
        },
        "python": {
          "distName": "aws-cdk.aws-route53",
          "module": "aws_cdk.aws_route53"
        }
      }
    },
    "@aws-cdk/aws-route53-targets": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Route53.Targets",
          "packageId": "Amazon.CDK.AWS.Route53.Targets",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "route53-targets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.route53.targets"
        },
        "js": {
          "npm": "@aws-cdk/aws-route53-targets"
        },
        "python": {
          "distName": "aws-cdk.aws-route53-targets",
          "module": "aws_cdk.aws_route53_targets"
        }
      }
    },
    "@aws-cdk/aws-s3": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3",
          "packageId": "Amazon.CDK.AWS.S3",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "s3",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3"
        },
        "python": {
          "distName": "aws-cdk.aws-s3",
          "module": "aws_cdk.aws_s3"
        }
      }
    },
    "@aws-cdk/aws-s3-assets": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3.Assets",
          "packageId": "Amazon.CDK.AWS.S3.Assets",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "s3-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3.assets"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3-assets"
        },
        "python": {
          "distName": "aws-cdk.aws-s3-assets",
          "module": "aws_cdk.aws_s3_assets"
        }
      }
    },
    "@aws-cdk/aws-sam": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SAM",
          "packageId": "Amazon.CDK.AWS.SAM",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "sam",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sam"
        },
        "js": {
          "npm": "@aws-cdk/aws-sam"
        },
        "python": {
          "distName": "aws-cdk.aws-sam",
          "module": "aws_cdk.aws_sam"
        }
      }
    },
    "@aws-cdk/aws-secretsmanager": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SecretsManager",
          "packageId": "Amazon.CDK.AWS.SecretsManager",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "secretsmanager",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.secretsmanager"
        },
        "js": {
          "npm": "@aws-cdk/aws-secretsmanager"
        },
        "python": {
          "distName": "aws-cdk.aws-secretsmanager",
          "module": "aws_cdk.aws_secretsmanager"
        }
      }
    },
    "@aws-cdk/aws-servicediscovery": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ServiceDiscovery",
          "packageId": "Amazon.CDK.AWS.ServiceDiscovery",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "servicediscovery",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.servicediscovery"
        },
        "js": {
          "npm": "@aws-cdk/aws-servicediscovery"
        },
        "python": {
          "distName": "aws-cdk.aws-servicediscovery",
          "module": "aws_cdk.aws_servicediscovery"
        }
      }
    },
    "@aws-cdk/aws-sns": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SNS",
          "packageId": "Amazon.CDK.AWS.SNS",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "sns",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sns"
        },
        "js": {
          "npm": "@aws-cdk/aws-sns"
        },
        "python": {
          "distName": "aws-cdk.aws-sns",
          "module": "aws_cdk.aws_sns"
        }
      }
    },
    "@aws-cdk/aws-sns-subscriptions": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SNS.Subscriptions",
          "packageId": "Amazon.CDK.AWS.SNS.Subscriptions",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "sns-subscriptions",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sns.subscriptions"
        },
        "js": {
          "npm": "@aws-cdk/aws-sns-subscriptions"
        },
        "python": {
          "distName": "aws-cdk.aws-sns-subscriptions",
          "module": "aws_cdk.aws_sns_subscriptions"
        }
      }
    },
    "@aws-cdk/aws-sqs": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SQS",
          "packageId": "Amazon.CDK.AWS.SQS",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "sqs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sqs"
        },
        "js": {
          "npm": "@aws-cdk/aws-sqs"
        },
        "python": {
          "distName": "aws-cdk.aws-sqs",
          "module": "aws_cdk.aws_sqs"
        }
      }
    },
    "@aws-cdk/aws-ssm": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SSM",
          "packageId": "Amazon.CDK.AWS.SSM",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "ssm",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ssm"
        },
        "js": {
          "npm": "@aws-cdk/aws-ssm"
        },
        "python": {
          "distName": "aws-cdk.aws-ssm",
          "module": "aws_cdk.aws_ssm"
        }
      }
    },
    "@aws-cdk/aws-stepfunctions": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.StepFunctions",
          "packageId": "Amazon.CDK.AWS.StepFunctions",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "stepfunctions",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.stepfunctions"
        },
        "js": {
          "npm": "@aws-cdk/aws-stepfunctions"
        },
        "python": {
          "distName": "aws-cdk.aws-stepfunctions",
          "module": "aws_cdk.aws_stepfunctions"
        }
      }
    },
    "@aws-cdk/aws-stepfunctions-tasks": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.StepFunctions.Tasks",
          "packageId": "Amazon.CDK.AWS.StepFunctions.Tasks",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "stepfunctions-tasks",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.stepfunctions.tasks"
        },
        "js": {
          "npm": "@aws-cdk/aws-stepfunctions-tasks"
        },
        "python": {
          "distName": "aws-cdk.aws-stepfunctions-tasks",
          "module": "aws_cdk.aws_stepfunctions_tasks"
        }
      }
    },
    "@aws-cdk/core": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK",
          "packageId": "Amazon.CDK",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "core",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.core"
        },
        "js": {
          "npm": "@aws-cdk/core"
        },
        "python": {
          "distName": "aws-cdk.core",
          "module": "aws_cdk.core"
        }
      }
    },
    "@aws-cdk/custom-resources": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CustomResources",
          "packageId": "Amazon.CDK.AWS.CustomResources",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "cdk-customresources",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.customresources"
        },
        "js": {
          "npm": "@aws-cdk/custom-resources"
        },
        "python": {
          "distName": "aws-cdk.custom-resources",
          "module": "aws_cdk.custom_resources"
        }
      }
    },
    "@aws-cdk/cx-api": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CXAPI",
          "packageId": "Amazon.CDK.CXAPI",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cx-api",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cxapi"
        },
        "js": {
          "npm": "@aws-cdk/cx-api"
        },
        "python": {
          "distName": "aws-cdk.cx-api",
          "module": "aws_cdk.cx_api"
        }
      }
    },
    "@aws-cdk/region-info": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.RegionInfo",
          "packageId": "Amazon.CDK.RegionInfo",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "cdk-region-info",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.regioninfo"
        },
        "js": {
          "npm": "@aws-cdk/region-info"
        },
        "python": {
          "distName": "aws-cdk.region-info",
          "module": "aws_cdk.region_info"
        }
      }
    }
  },
  "description": "The CDK Construct Library for AWS::EKS",
  "docs": {
    "stability": "experimental"
  },
  "homepage": "https://github.com/aws/aws-cdk",
  "jsiiVersion": "0.22.0 (build 14afdde)",
  "keywords": [
    "aws",
    "cdk",
    "constructs",
    "eks"
  ],
  "license": "Apache-2.0",
  "name": "@aws-cdk/aws-eks",
  "readme": {
    "markdown": "## Amazon EKS Construct Library\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Stability: Experimental](https://img.shields.io/badge/stability-Experimental-important.svg?style=for-the-badge)\n\n> **This is a _developer preview_ (public beta) module.**\n>\n> All classes with the `Cfn` prefix in this module ([CFN Resources](https://docs.aws.amazon.com/cdk/latest/guide/constructs.html#constructs_lib))\n> are auto-generated from CloudFormation. They are stable and safe to use.\n>\n> However, all other classes, i.e., higher level constructs, are under active development and subject to non-backward\n> compatible changes or removal in any future version. These are not subject to the [Semantic Versioning](https://semver.org/) model.\n> This means that while you may use them, you may need to update your source code when upgrading to a newer version of this package.\n\n---\n<!--END STABILITY BANNER-->\n\nThis construct library allows you to define [Amazon Elastic Container Service\nfor Kubernetes (EKS)](https://aws.amazon.com/eks/) clusters programmatically.\nThis library also supports programmatically defining Kubernetes resource\nmanifests within EKS clusters.\n\nThis example defines an Amazon EKS cluster with the following configuration:\n\n- 2x **m5.large** instances (this instance type suits most common use-cases, and is good value for money)\n- Dedicated VPC with default configuration (see [ec2.Vpc](https://docs.aws.amazon.com/cdk/api/latest/docs/aws-ec2-readme.html#vpc))\n- A Kubernetes pod with a container based on the [paulbouwer/hello-kubernetes](https://github.com/paulbouwer/hello-kubernetes) image.\n\n```ts\nconst cluster = new eks.Cluster(this, 'hello-eks');\n\ncluster.addResource('mypod', {\n  apiVersion: 'v1',\n  kind: 'Pod',\n  metadata: { name: 'mypod' },\n  spec: {\n    containers: [\n      {\n        name: 'hello',\n        image: 'paulbouwer/hello-kubernetes:1.5',\n        ports: [ { containerPort: 8080 } ]\n      }\n    ]\n  }\n});\n```\n\nHere is a [complete sample](https://github.com/aws/aws-cdk/blob/master/packages/%40aws-cdk/aws-eks/test/integ.eks-kubectl.lit.ts).\n\n### Capacity\n\nBy default, `eks.Cluster` is created with x2 `m5.large` instances.\n\n```ts\nnew eks.Cluster(this, 'cluster-two-m5-large');\n```\n\nThe quantity and instance type for the default capacity can be specified through\nthe `defaultCapacity` and `defaultCapacityInstance` props:\n\n```ts\nnew eks.Cluster(this, 'cluster', {\n  defaultCapacity: 10,\n  defaultCapacityInstance: new ec2.InstanceType('m2.xlarge')\n});\n```\n\nTo disable the default capacity, simply set `defaultCapacity` to `0`:\n\n```ts\nnew eks.Cluster(this, 'cluster-with-no-capacity', { defaultCapacity: 0 });\n```\n\nThe `cluster.defaultCapacity` property will reference the `AutoScalingGroup`\nresource for the default capacity. It will be `undefined` if `defaultCapacity`\nis set to `0`:\n\n```ts\nconst cluster = new eks.Cluster(this, 'my-cluster');\ncluster.defaultCapacity!.scaleOnCpuUtilization('up', {\n  targetUtilizationPercent: 80\n});\n```\n\nYou can add customized capacity through `cluster.addCapacity()` or\n`cluster.addAutoScalingGroup()`:\n\n```ts\ncluster.addCapacity('frontend-nodes', {\n  instanceType: new ec2.InstanceType('t2.medium'),\n  minCapacity: 3,\n  vpcSubnets: { subnetType: ec2.SubnetType.PUBLIC }\n});\n```\n\n### Fargate\n\nAWS Fargate is a technology that provides on-demand, right-sized compute\ncapacity for containers. With AWS Fargate, you no longer have to provision,\nconfigure, or scale groups of virtual machines to run containers. This removes\nthe need to choose server types, decide when to scale your node groups, or\noptimize cluster packing.\n\nYou can control which pods start on Fargate and how they run with Fargate\nProfiles, which are defined as part of your Amazon EKS cluster.\n\nSee [Fargate\nConsiderations](https://docs.aws.amazon.com/eks/latest/userguide/fargate.html#fargate-considerations)\nin the AWS EKS User Guide.\n\nYou can add Fargate Profiles to any EKS cluster defined in your CDK app\nthrough the `addFargateProfile()` method. The following example adds a profile\nthat will match all pods from the \"default\" namespace:\n\n```ts\ncluster.addFargateProfile('MyProfile', {\n  selectors: [ { namespace: 'default' } ]\n});\n```\n\nTo create an EKS cluster that **only** uses Fargate capacity, you can use\n`FargateCluster`.\n\nThe following code defines an Amazon EKS cluster without EC2 capacity and a default\nFargate Profile that matches all pods from the \"kube-system\" and \"default\" namespaces. It is also configured to [run CoreDNS on Fargate](https://docs.aws.amazon.com/eks/latest/userguide/fargate-getting-started.html#fargate-gs-coredns) through the `coreDnsComputeType` cluster option.\n\n```ts\nconst cluster = new eks.FargateCluster(this, 'MyCluster');\n\n // apply k8s resources on this cluster\ncluster.addResource(...);\n```\n\n**NOTE**: Classic Load Balancers and Network Load Balancers are not supported on\npods running on Fargate. For ingress, we recommend that you use the [ALB Ingress\nController](https://docs.aws.amazon.com/eks/latest/userguide/alb-ingress.html)\non Amazon EKS (minimum version v1.1.4).\n\n### Spot Capacity\n\nIf `spotPrice` is specified, the capacity will be purchased from spot instances:\n\n```ts\ncluster.addCapacity('spot', {\n  spotPrice: '0.1094',\n  instanceType: new ec2.InstanceType('t3.large'),\n  maxCapacity: 10\n});\n```\n\nSpot instance nodes will be labeled with `lifecycle=Ec2Spot` and tainted with `PreferNoSchedule`.\n\nThe [Spot Termination Handler](https://github.com/awslabs/ec2-spot-labs/tree/master/ec2-spot-eks-solution/spot-termination-handler)\nDaemonSet will be installed on these nodes. The termination handler leverages\n[EC2 Spot Instance Termination Notices](https://aws.amazon.com/blogs/aws/new-ec2-spot-instance-termination-notices/)\nto gracefully stop all pods running on spot nodes that are about to be\nterminated.\n\n### Bootstrapping\n\nWhen adding capacity, you can specify options for\n[/etc/eks/boostrap.sh](https://github.com/awslabs/amazon-eks-ami/blob/master/files/bootstrap.sh)\nwhich is responsible for associating the node to the EKS cluster. For example,\nyou can use `kubeletExtraArgs` to add custom node labels or taints.\n\n\n```ts\n// up to ten spot instances\ncluster.addCapacity('spot', {\n  instanceType: new ec2.InstanceType('t3.large'),\n  minCapacity: 2,\n  bootstrapOptions: {\n    kubeletExtraArgs: '--node-labels foo=bar,goo=far',\n    awsApiRetryAttempts: 5\n  }\n});\n```\n\nTo disable bootstrapping altogether (i.e. to fully customize user-data), set `bootstrapEnabled` to `false` when you add\nthe capacity.\n\n### Masters Role\n\nThe Amazon EKS construct library allows you to specify an IAM role that will be\ngranted `system:masters` privileges on your cluster.\n\nWithout specifying a `mastersRole`, you will not be able to interact manually\nwith the cluster.\n\nThe following example defines an IAM role that can be assumed by all users\nin the account and shows how to use the `mastersRole` property to map this\nrole to the Kubernetes `system:masters` group:\n\n```ts\n// first define the role\nconst clusterAdmin = new iam.Role(this, 'AdminRole', {\n  assumedBy: new iam.AccountRootPrincipal()\n});\n\n// now define the cluster and map role to \"masters\" RBAC group\nnew eks.Cluster(this, 'Cluster', {\n  mastersRole: clusterAdmin\n});\n```\n\nWhen you `cdk deploy` this CDK app, you will notice that an output will be printed\nwith the `update-kubeconfig` command.\n\nSomething like this:\n\n```\nOutputs:\neks-integ-defaults.ClusterConfigCommand43AAE40F = aws eks update-kubeconfig --name cluster-ba7c166b-c4f3-421c-bf8a-6812e4036a33 --role-arn arn:aws:iam::112233445566:role/eks-integ-defaults-Role1ABCC5F0-1EFK2W5ZJD98Y\n```\n\nCopy & paste the \"`aws eks update-kubeconfig ...`\" command to your shell in\norder to connect to your EKS cluster with the \"masters\" role.\n\nNow, given [AWS CLI](https://aws.amazon.com/cli/) is configured to use AWS\ncredentials for a user that is trusted by the masters role, you should be able\nto interact with your cluster through `kubectl` (the above example will trust\nall users in the account).\n\nFor example:\n\n```console\n$ aws eks update-kubeconfig --name cluster-ba7c166b-c4f3-421c-bf8a-6812e4036a33 --role-arn arn:aws:iam::112233445566:role/eks-integ-defaults-Role1ABCC5F0-1EFK2W5ZJD98Y\nAdded new context arn:aws:eks:eu-west-2:112233445566:cluster/cluster-ba7c166b-c4f3-421c-bf8a-6812e4036a33 to /Users/boom/.kube/config\n\n$ kubectl get nodes # list all nodes\nNAME                                         STATUS   ROLES    AGE   VERSION\nip-10-0-147-66.eu-west-2.compute.internal    Ready    <none>   21m   v1.13.7-eks-c57ff8\nip-10-0-169-151.eu-west-2.compute.internal   Ready    <none>   21m   v1.13.7-eks-c57ff8\n\n$ kubectl get all -n kube-system\nNAME                           READY   STATUS    RESTARTS   AGE\npod/aws-node-fpmwv             1/1     Running   0          21m\npod/aws-node-m9htf             1/1     Running   0          21m\npod/coredns-5cb4fb54c7-q222j   1/1     Running   0          23m\npod/coredns-5cb4fb54c7-v9nxx   1/1     Running   0          23m\npod/kube-proxy-d4jrh           1/1     Running   0          21m\npod/kube-proxy-q7hh7           1/1     Running   0          21m\n\nNAME               TYPE        CLUSTER-IP    EXTERNAL-IP   PORT(S)         AGE\nservice/kube-dns   ClusterIP   172.20.0.10   <none>        53/UDP,53/TCP   23m\n\nNAME                        DESIRED   CURRENT   READY   UP-TO-DATE   AVAILABLE   NODE SELECTOR   AGE\ndaemonset.apps/aws-node     2         2         2       2            2           <none>          23m\ndaemonset.apps/kube-proxy   2         2         2       2            2           <none>          23m\n\nNAME                      READY   UP-TO-DATE   AVAILABLE   AGE\ndeployment.apps/coredns   2/2     2            2           23m\n\nNAME                                 DESIRED   CURRENT   READY   AGE\nreplicaset.apps/coredns-5cb4fb54c7   2         2         2       23m\n```\n\nFor your convenience, an AWS CloudFormation output will automatically be\nincluded in your template and will be printed when running `cdk deploy`.\n\n**NOTE**: if the cluster is configured with `kubectlEnabled: false`, it\nwill be created with the role/user that created the AWS CloudFormation\nstack. See [Kubectl Support](#kubectl-support) for details.\n\n### Kubernetes Resources\n\nThe `KubernetesResource` construct or `cluster.addResource` method can be used\nto apply Kubernetes resource manifests to this cluster.\n\nThe following examples will deploy the [paulbouwer/hello-kubernetes](https://github.com/paulbouwer/hello-kubernetes)\nservice on the cluster:\n\n```ts\nconst appLabel = { app: \"hello-kubernetes\" };\n\nconst deployment = {\n  apiVersion: \"apps/v1\",\n  kind: \"Deployment\",\n  metadata: { name: \"hello-kubernetes\" },\n  spec: {\n    replicas: 3,\n    selector: { matchLabels: appLabel },\n    template: {\n      metadata: { labels: appLabel },\n      spec: {\n        containers: [\n          {\n            name: \"hello-kubernetes\",\n            image: \"paulbouwer/hello-kubernetes:1.5\",\n            ports: [ { containerPort: 8080 } ]\n          }\n        ]\n      }\n    }\n  }\n};\n\nconst service = {\n  apiVersion: \"v1\",\n  kind: \"Service\",\n  metadata: { name: \"hello-kubernetes\" },\n  spec: {\n    type: \"LoadBalancer\",\n    ports: [ { port: 80, targetPort: 8080 } ],\n    selector: appLabel\n  }\n};\n\n// option 1: use a construct\nnew KubernetesResource(this, 'hello-kub', {\n  cluster,\n  manifest: [ deployment, service ]\n});\n\n// or, option2: use `addResource`\ncluster.addResource('hello-kub', service, deployment);\n```\n\nSince Kubernetes resources are implemented as CloudFormation resources in the\nCDK. This means that if the resource is deleted from your code (or the stack is\ndeleted), the next `cdk deploy` will issue a `kubectl delete` command and the\nKubernetes resources will be deleted.\n\n### AWS IAM Mapping\n\nAs described in the [Amazon EKS User Guide](https://docs.aws.amazon.com/en_us/eks/latest/userguide/add-user-role.html),\nyou can map AWS IAM users and roles to [Kubernetes Role-based access control (RBAC)](https://kubernetes.io/docs/reference/access-authn-authz/rbac).\n\nThe Amazon EKS construct manages the **aws-auth ConfigMap** Kubernetes resource\non your behalf and exposes an API through the `cluster.awsAuth` for mapping\nusers, roles and accounts.\n\nFurthermore, when auto-scaling capacity is added to the cluster (through\n`cluster.addCapacity` or `cluster.addAutoScalingGroup`), the IAM instance role\nof the auto-scaling group will be automatically mapped to RBAC so nodes can\nconnect to the cluster. No manual mapping is required any longer.\n\n> NOTE: `cluster.awsAuth` will throw an error if your cluster is created with `kubectlEnabled: false`.\n\nFor example, let's say you want to grant an IAM user administrative privileges\non your cluster:\n\n```ts\nconst adminUser = new iam.User(this, 'Admin');\ncluster.awsAuth.addUserMapping(adminUser, { groups: [ 'system:masters' ]});\n```\n\nA convenience method for mapping a role to the `system:masters` group is also available:\n\n```ts\ncluster.awsAuth.addMastersRole(role)\n```\n\n### Node ssh Access\n\nIf you want to be able to SSH into your worker nodes, you must already\nhave an SSH key in the region you're connecting to and pass it, and you must\nbe able to connect to the hosts (meaning they must have a public IP and you\nshould be allowed to connect to them on port 22):\n\n```ts lit=test/example.ssh-into-nodes.lit.ts\n    const asg = cluster.addCapacity('Nodes', {\n      instanceType: new ec2.InstanceType('t2.medium'),\n      vpcSubnets: { subnetType: ec2.SubnetType.PUBLIC },\n      keyName: 'my-key-name',\n    });\n\n    // Replace with desired IP\n    asg.connections.allowFrom(ec2.Peer.ipv4('1.2.3.4/32'), ec2.Port.tcp(22));\n```\n\nIf you want to SSH into nodes in a private subnet, you should set up a\nbastion host in a public subnet. That setup is recommended, but is\nunfortunately beyond the scope of this documentation.\n\n### kubectl Support\n\nWhen you create an Amazon EKS cluster, the IAM entity user or role, such as a\n[federated user](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers.html)\nthat creates the cluster, is automatically granted `system:masters` permissions\nin the cluster's RBAC configuration.\n\nIn order to allow programmatically defining **Kubernetes resources** in your AWS\nCDK app and provisioning them through AWS CloudFormation, we will need to assume\nthis \"masters\" role every time we want to issue `kubectl` operations against your\ncluster.\n\nAt the moment, the [AWS::EKS::Cluster](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html)\nAWS CloudFormation resource does not support this behavior, so in order to\nsupport \"programmatic kubectl\", such as applying manifests\nand mapping IAM roles from within your CDK application, the Amazon EKS\nconstruct library uses a custom resource for provisioning the cluster.\nThis custom resource is executed with an IAM role that we can then use\nto issue `kubectl` commands.\n\nThe default behavior of this library is to use this custom resource in order\nto retain programmatic control over the cluster. In other words: to allow\nyou to define Kubernetes resources in your CDK code instead of having to\nmanage your Kubernetes applications through a separate system.\n\nOne of the implications of this design is that, by default, the user who\nprovisioned the AWS CloudFormation stack (executed `cdk deploy`) will\nnot have administrative privileges on the EKS cluster.\n\n1. Additional resources will be synthesized into your template (the AWS Lambda\n   function, the role and policy).\n2. As described in [Interacting with Your Cluster](#interacting-with-your-cluster),\n   if you wish to be able to manually interact with your cluster, you will need\n   to map an IAM role or user to the `system:masters` group. This can be either\n   done by specifying a `mastersRole` when the cluster is defined, calling\n   `cluster.awsAuth.addMastersRole` or explicitly mapping an IAM role or IAM user to the\n   relevant Kubernetes RBAC groups using `cluster.addRoleMapping` and/or\n   `cluster.addUserMapping`.\n\nIf you wish to disable the programmatic kubectl behavior and use the standard\nAWS::EKS::Cluster resource, you can specify `kubectlEnabled: false` when you define\nthe cluster:\n\n```ts\nnew eks.Cluster(this, 'cluster', {\n  kubectlEnabled: false\n});\n```\n\n**Take care**: a change in this property will cause the cluster to be destroyed\nand a new cluster to be created.\n\nWhen kubectl is disabled, you should be aware of the following:\n\n1. When you log-in to your cluster, you don't need to specify `--role-arn` as\n   long as you are using the same user that created the cluster.\n2. As described in the Amazon EKS User Guide, you will need to manually\n   edit the [aws-auth ConfigMap](https://docs.aws.amazon.com/eks/latest/userguide/add-user-role.html)\n   when you add capacity in order to map the IAM instance role to RBAC to allow nodes to join the cluster.\n3. Any `eks.Cluster` APIs that depend on programmatic kubectl support will fail\n   with an error: `cluster.addResource`, `cluster.addChart`, `cluster.awsAuth`, `props.mastersRole`.\n\n### Helm Charts\n\nThe `HelmChart` construct or `cluster.addChart` method can be used\nto add Kubernetes resources to this cluster using Helm.\n\nThe following example will install the [NGINX Ingress Controller](https://kubernetes.github.io/ingress-nginx/)\nto you cluster using Helm.\n\n```ts\n// option 1: use a construct\nnew HelmChart(this, 'NginxIngress', {\n  cluster,\n  chart: 'nginx-ingress',\n  repository: 'https://helm.nginx.com/stable',\n  namespace: 'kube-system'\n});\n\n// or, option2: use `addChart`\ncluster.addChart('NginxIngress', {\n  chart: 'nginx-ingress',\n  repository: 'https://helm.nginx.com/stable',\n  namespace: 'kube-system'\n});\n```\n\nHelm charts will be installed and updated using `helm upgrade --install`.\nThis means that if the chart is added to CDK with the same release name, it will try to update\nthe chart in the cluster. The chart will exists as CloudFormation resource.\n\nHelm charts are implemented as CloudFormation resources in CDK.\nThis means that if the chart is deleted from your code (or the stack is\ndeleted), the next `cdk deploy` will issue a `helm uninstall` command and the\nHelm chart will be deleted.\n\nWhen there is no `release` defined, the chart will be installed using the `node.uniqueId`,\nwhich will be lower cassed and truncated to the last 63 characters.\n\n### Roadmap\n\n- [ ] AutoScaling (combine EC2 and Kubernetes scaling)\n"
  },
  "repository": {
    "directory": "packages/@aws-cdk/aws-eks",
    "type": "git",
    "url": "https://github.com/aws/aws-cdk.git"
  },
  "schema": "jsii/0.10.0",
  "targets": {
    "dotnet": {
      "assemblyOriginatorKeyFile": "../../key.snk",
      "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
      "namespace": "Amazon.CDK.AWS.EKS",
      "packageId": "Amazon.CDK.AWS.EKS",
      "signAssembly": true
    },
    "java": {
      "maven": {
        "artifactId": "eks",
        "groupId": "software.amazon.awscdk"
      },
      "package": "software.amazon.awscdk.services.eks"
    },
    "js": {
      "npm": "@aws-cdk/aws-eks"
    },
    "python": {
      "distName": "aws-cdk.aws-eks",
      "module": "aws_cdk.aws_eks"
    }
  },
  "types": {
    "@aws-cdk/aws-eks.AutoScalingGroupOptions": {
      "assembly": "@aws-cdk/aws-eks",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Options for adding an AutoScalingGroup as capacity."
      },
      "fqn": "@aws-cdk/aws-eks.AutoScalingGroupOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cluster.ts",
        "line": 792
      },
      "name": "AutoScalingGroupOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "If you wish to provide a custom user data script, set this to `false` and\nmanually invoke `autoscalingGroup.addUserData()`.",
            "stability": "experimental",
            "summary": "Configures the EC2 user-data script for instances in this autoscaling group to bootstrap the node (invoke `/etc/eks/bootstrap.sh`) and associate it with the EKS cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 813
          },
          "name": "bootstrapEnabled",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default options",
            "stability": "experimental",
            "summary": "Allows options for node bootstrapping through EC2 user data."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 819
          },
          "name": "bootstrapOptions",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-eks.BootstrapOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- true if the cluster has kubectl enabled (which is the default).",
            "remarks": "This cannot be explicitly set to `true` if the cluster has kubectl disabled.",
            "stability": "experimental",
            "summary": "Will automatically update the aws-auth ConfigMap to map the IAM instance role to RBAC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 801
          },
          "name": "mapRole",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ]
    },
    "@aws-cdk/aws-eks.AwsAuth": {
      "assembly": "@aws-cdk/aws-eks",
      "base": "@aws-cdk/core.Construct",
      "docs": {
        "see": "https://docs.aws.amazon.com/en_us/eks/latest/userguide/add-user-role.html",
        "stability": "experimental",
        "summary": "Manages mapping between IAM users and roles to Kubernetes RBAC configuration."
      },
      "fqn": "@aws-cdk/aws-eks.AwsAuth",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-eks.AwsAuthProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/aws-auth.ts",
        "line": 24
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Additional AWS account to add to the aws-auth configmap."
          },
          "locationInModule": {
            "filename": "lib/aws-auth.ts",
            "line": 93
          },
          "name": "addAccount",
          "parameters": [
            {
              "docs": {
                "summary": "account number."
              },
              "name": "accountId",
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Adds the specified IAM role to the `system:masters` RBAC group, which means that anyone that can assume it will be able to administer this Kubernetes system."
          },
          "locationInModule": {
            "filename": "lib/aws-auth.ts",
            "line": 62
          },
          "name": "addMastersRole",
          "parameters": [
            {
              "docs": {
                "summary": "The IAM role to add."
              },
              "name": "role",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IRole"
              }
            },
            {
              "docs": {
                "summary": "Optional user (defaults to the role ARN)."
              },
              "name": "username",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Adds a mapping between an IAM role to a Kubernetes user and groups."
          },
          "locationInModule": {
            "filename": "lib/aws-auth.ts",
            "line": 75
          },
          "name": "addRoleMapping",
          "parameters": [
            {
              "docs": {
                "summary": "The IAM role to map."
              },
              "name": "role",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IRole"
              }
            },
            {
              "docs": {
                "summary": "Mapping to k8s user name and groups."
              },
              "name": "mapping",
              "type": {
                "fqn": "@aws-cdk/aws-eks.AwsAuthMapping"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Adds a mapping between an IAM user to a Kubernetes user and groups."
          },
          "locationInModule": {
            "filename": "lib/aws-auth.ts",
            "line": 85
          },
          "name": "addUserMapping",
          "parameters": [
            {
              "docs": {
                "summary": "The IAM user to map."
              },
              "name": "user",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IUser"
              }
            },
            {
              "docs": {
                "summary": "Mapping to k8s user name and groups."
              },
              "name": "mapping",
              "type": {
                "fqn": "@aws-cdk/aws-eks.AwsAuthMapping"
              }
            }
          ]
        }
      ],
      "name": "AwsAuth"
    },
    "@aws-cdk/aws-eks.AwsAuthMapping": {
      "assembly": "@aws-cdk/aws-eks",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "AwsAuth mapping."
      },
      "fqn": "@aws-cdk/aws-eks.AwsAuthMapping",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/aws-auth-mapping.ts",
        "line": 4
      },
      "name": "AwsAuthMapping",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "https://kubernetes.io/docs/reference/access-authn-authz/rbac/#default-roles-and-role-bindings",
            "stability": "experimental",
            "summary": "A list of groups within Kubernetes to which the role is mapped."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/aws-auth-mapping.ts",
            "line": 17
          },
          "name": "groups",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- By default, the user name is the ARN of the IAM role.",
            "stability": "experimental",
            "summary": "The user name within Kubernetes to map to the IAM role."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/aws-auth-mapping.ts",
            "line": 10
          },
          "name": "username",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-eks.AwsAuthProps": {
      "assembly": "@aws-cdk/aws-eks",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Configuration props for the AwsAuth construct."
      },
      "fqn": "@aws-cdk/aws-eks.AwsAuthProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/aws-auth.ts",
        "line": 10
      },
      "name": "AwsAuthProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "[disable-awslint:ref-via-interface]",
            "stability": "experimental",
            "summary": "The EKS cluster to apply this configuration to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/aws-auth.ts",
            "line": 16
          },
          "name": "cluster",
          "type": {
            "fqn": "@aws-cdk/aws-eks.Cluster"
          }
        }
      ]
    },
    "@aws-cdk/aws-eks.BootstrapOptions": {
      "assembly": "@aws-cdk/aws-eks",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "EKS node bootstrapping options."
      },
      "fqn": "@aws-cdk/aws-eks.BootstrapOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cluster.ts",
        "line": 741
      },
      "name": "BootstrapOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- none",
            "see": "https://github.com/awslabs/amazon-eks-ami/blob/master/files/bootstrap.sh",
            "stability": "experimental",
            "summary": "Additional command line arguments to pass to the `/etc/eks/bootstrap.sh` command."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 786
          },
          "name": "additionalArgs",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "3",
            "stability": "experimental",
            "summary": "Number of retry attempts for AWS API call (DescribeCluster)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 761
          },
          "name": "awsApiRetryAttempts",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- none",
            "stability": "experimental",
            "summary": "The contents of the `/etc/docker/daemon.json` file. Useful if you want a custom config differing from the default one in the EKS AMI."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 769
          },
          "name": "dockerConfigJson",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Restores the docker default bridge network."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 754
          },
          "name": "enableDockerBridge",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- none",
            "example": "--node-labels foo=bar,goo=far",
            "remarks": "Useful for adding labels or taints.",
            "stability": "experimental",
            "summary": "Extra arguments to add to the kubelet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 777
          },
          "name": "kubeletExtraArgs",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "experimental",
            "summary": "Sets `--max-pods` for the kubelet based on the capacity of the EC2 instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 747
          },
          "name": "useMaxPods",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ]
    },
    "@aws-cdk/aws-eks.CapacityOptions": {
      "assembly": "@aws-cdk/aws-eks",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Options for adding worker nodes."
      },
      "fqn": "@aws-cdk/aws-eks.CapacityOptions",
      "interfaces": [
        "@aws-cdk/aws-autoscaling.CommonAutoScalingGroupProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cluster.ts",
        "line": 702
      },
      "name": "CapacityOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Instance type of the instances to start."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 706
          },
          "name": "instanceType",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InstanceType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "If you wish to provide a custom user data script, set this to `false` and\nmanually invoke `autoscalingGroup.addUserData()`.",
            "stability": "experimental",
            "summary": "Configures the EC2 user-data script for instances in this autoscaling group to bootstrap the node (invoke `/etc/eks/bootstrap.sh`) and associate it with the EKS cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 728
          },
          "name": "bootstrapEnabled",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- none",
            "stability": "experimental",
            "summary": "EKS node bootstrapping options."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 735
          },
          "name": "bootstrapOptions",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-eks.BootstrapOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- true if the cluster has kubectl enabled (which is the default).",
            "remarks": "This cannot be explicitly set to `true` if the cluster has kubectl disabled.",
            "stability": "experimental",
            "summary": "Will automatically update the aws-auth ConfigMap to map the IAM instance role to RBAC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 716
          },
          "name": "mapRole",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ]
    },
    "@aws-cdk/aws-eks.CfnCluster": {
      "assembly": "@aws-cdk/aws-eks",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EKS::Cluster"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EKS::Cluster`."
      },
      "fqn": "@aws-cdk/aws-eks.CfnCluster",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EKS::Cluster`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-eks.CfnClusterProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/eks.generated.ts",
        "line": 88
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 167
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 180
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnCluster",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 92
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Arn"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 97
          },
          "name": "attrArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "CertificateAuthorityData"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 102
          },
          "name": "attrCertificateAuthorityData",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "ClusterSecurityGroupId"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 107
          },
          "name": "attrClusterSecurityGroupId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Endpoint"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 112
          },
          "name": "attrEndpoint",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 172
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-resourcesvpcconfig",
            "stability": "external",
            "summary": "`AWS::EKS::Cluster.ResourcesVpcConfig`."
          },
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 118
          },
          "name": "resourcesVpcConfig",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/aws-eks.CfnCluster.ResourcesVpcConfigProperty"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-rolearn",
            "stability": "external",
            "summary": "`AWS::EKS::Cluster.RoleArn`."
          },
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 124
          },
          "name": "roleArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-name",
            "stability": "external",
            "summary": "`AWS::EKS::Cluster.Name`."
          },
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 130
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-version",
            "stability": "external",
            "summary": "`AWS::EKS::Cluster.Version`."
          },
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 136
          },
          "name": "version",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-eks.CfnCluster.ResourcesVpcConfigProperty": {
      "assembly": "@aws-cdk/aws-eks",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-resourcesvpcconfig.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-eks.CfnCluster.ResourcesVpcConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/eks.generated.ts",
        "line": 190
      },
      "name": "ResourcesVpcConfigProperty",
      "namespace": "CfnCluster",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-resourcesvpcconfig.html#cfn-eks-cluster-resourcesvpcconfig-subnetids",
            "stability": "external",
            "summary": "`CfnCluster.ResourcesVpcConfigProperty.SubnetIds`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 200
          },
          "name": "subnetIds",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-resourcesvpcconfig.html#cfn-eks-cluster-resourcesvpcconfig-securitygroupids",
            "stability": "external",
            "summary": "`CfnCluster.ResourcesVpcConfigProperty.SecurityGroupIds`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 195
          },
          "name": "securityGroupIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-eks.CfnClusterProps": {
      "assembly": "@aws-cdk/aws-eks",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html",
        "stability": "external",
        "summary": "Properties for defining a `AWS::EKS::Cluster`."
      },
      "fqn": "@aws-cdk/aws-eks.CfnClusterProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/eks.generated.ts",
        "line": 16
      },
      "name": "CfnClusterProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-resourcesvpcconfig",
            "stability": "external",
            "summary": "`AWS::EKS::Cluster.ResourcesVpcConfig`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 22
          },
          "name": "resourcesVpcConfig",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/aws-eks.CfnCluster.ResourcesVpcConfigProperty"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-rolearn",
            "stability": "external",
            "summary": "`AWS::EKS::Cluster.RoleArn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 28
          },
          "name": "roleArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-name",
            "stability": "external",
            "summary": "`AWS::EKS::Cluster.Name`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 34
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-version",
            "stability": "external",
            "summary": "`AWS::EKS::Cluster.Version`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 40
          },
          "name": "version",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-eks.CfnNodegroup": {
      "assembly": "@aws-cdk/aws-eks",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EKS::Nodegroup"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EKS::Nodegroup`."
      },
      "fqn": "@aws-cdk/aws-eks.CfnNodegroup",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EKS::Nodegroup`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-eks.CfnNodegroupProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/eks.generated.ts",
        "line": 396
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 540
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 563
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnNodegroup",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 400
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Arn"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 405
          },
          "name": "attrArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "ClusterName"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 410
          },
          "name": "attrClusterName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "NodegroupName"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 415
          },
          "name": "attrNodegroupName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 545
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-tags",
            "stability": "external",
            "summary": "`AWS::EKS::Nodegroup.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 493
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-clustername",
            "stability": "external",
            "summary": "`AWS::EKS::Nodegroup.ClusterName`."
          },
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 421
          },
          "name": "clusterName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-labels",
            "stability": "external",
            "summary": "`AWS::EKS::Nodegroup.Labels`."
          },
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 463
          },
          "name": "labels",
          "type": {
            "primitive": "any"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-noderole",
            "stability": "external",
            "summary": "`AWS::EKS::Nodegroup.NodeRole`."
          },
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 427
          },
          "name": "nodeRole",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-subnets",
            "stability": "external",
            "summary": "`AWS::EKS::Nodegroup.Subnets`."
          },
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 433
          },
          "name": "subnets",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-amitype",
            "stability": "external",
            "summary": "`AWS::EKS::Nodegroup.AmiType`."
          },
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 439
          },
          "name": "amiType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-disksize",
            "stability": "external",
            "summary": "`AWS::EKS::Nodegroup.DiskSize`."
          },
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 445
          },
          "name": "diskSize",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-forceupdateenabled",
            "stability": "external",
            "summary": "`AWS::EKS::Nodegroup.ForceUpdateEnabled`."
          },
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 451
          },
          "name": "forceUpdateEnabled",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-instancetypes",
            "stability": "external",
            "summary": "`AWS::EKS::Nodegroup.InstanceTypes`."
          },
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 457
          },
          "name": "instanceTypes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-nodegroupname",
            "stability": "external",
            "summary": "`AWS::EKS::Nodegroup.NodegroupName`."
          },
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 469
          },
          "name": "nodegroupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-releaseversion",
            "stability": "external",
            "summary": "`AWS::EKS::Nodegroup.ReleaseVersion`."
          },
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 475
          },
          "name": "releaseVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-remoteaccess",
            "stability": "external",
            "summary": "`AWS::EKS::Nodegroup.RemoteAccess`."
          },
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 481
          },
          "name": "remoteAccess",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-eks.CfnNodegroup.RemoteAccessProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-scalingconfig",
            "stability": "external",
            "summary": "`AWS::EKS::Nodegroup.ScalingConfig`."
          },
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 487
          },
          "name": "scalingConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-eks.CfnNodegroup.ScalingConfigProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-version",
            "stability": "external",
            "summary": "`AWS::EKS::Nodegroup.Version`."
          },
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 499
          },
          "name": "version",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-eks.CfnNodegroup.RemoteAccessProperty": {
      "assembly": "@aws-cdk/aws-eks",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-remoteaccess.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-eks.CfnNodegroup.RemoteAccessProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/eks.generated.ts",
        "line": 573
      },
      "name": "RemoteAccessProperty",
      "namespace": "CfnNodegroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-remoteaccess.html#cfn-eks-nodegroup-remoteaccess-ec2sshkey",
            "stability": "external",
            "summary": "`CfnNodegroup.RemoteAccessProperty.Ec2SshKey`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 578
          },
          "name": "ec2SshKey",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-remoteaccess.html#cfn-eks-nodegroup-remoteaccess-sourcesecuritygroups",
            "stability": "external",
            "summary": "`CfnNodegroup.RemoteAccessProperty.SourceSecurityGroups`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 583
          },
          "name": "sourceSecurityGroups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-eks.CfnNodegroup.ScalingConfigProperty": {
      "assembly": "@aws-cdk/aws-eks",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-scalingconfig.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-eks.CfnNodegroup.ScalingConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/eks.generated.ts",
        "line": 625
      },
      "name": "ScalingConfigProperty",
      "namespace": "CfnNodegroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-scalingconfig.html#cfn-eks-nodegroup-scalingconfig-desiredsize",
            "stability": "external",
            "summary": "`CfnNodegroup.ScalingConfigProperty.DesiredSize`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 630
          },
          "name": "desiredSize",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-scalingconfig.html#cfn-eks-nodegroup-scalingconfig-maxsize",
            "stability": "external",
            "summary": "`CfnNodegroup.ScalingConfigProperty.MaxSize`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 635
          },
          "name": "maxSize",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-scalingconfig.html#cfn-eks-nodegroup-scalingconfig-minsize",
            "stability": "external",
            "summary": "`CfnNodegroup.ScalingConfigProperty.MinSize`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 640
          },
          "name": "minSize",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-eks.CfnNodegroupProps": {
      "assembly": "@aws-cdk/aws-eks",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html",
        "stability": "external",
        "summary": "Properties for defining a `AWS::EKS::Nodegroup`."
      },
      "fqn": "@aws-cdk/aws-eks.CfnNodegroupProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/eks.generated.ts",
        "line": 243
      },
      "name": "CfnNodegroupProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-clustername",
            "stability": "external",
            "summary": "`AWS::EKS::Nodegroup.ClusterName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 249
          },
          "name": "clusterName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-noderole",
            "stability": "external",
            "summary": "`AWS::EKS::Nodegroup.NodeRole`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 255
          },
          "name": "nodeRole",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-subnets",
            "stability": "external",
            "summary": "`AWS::EKS::Nodegroup.Subnets`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 261
          },
          "name": "subnets",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-amitype",
            "stability": "external",
            "summary": "`AWS::EKS::Nodegroup.AmiType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 267
          },
          "name": "amiType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-disksize",
            "stability": "external",
            "summary": "`AWS::EKS::Nodegroup.DiskSize`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 273
          },
          "name": "diskSize",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-forceupdateenabled",
            "stability": "external",
            "summary": "`AWS::EKS::Nodegroup.ForceUpdateEnabled`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 279
          },
          "name": "forceUpdateEnabled",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-instancetypes",
            "stability": "external",
            "summary": "`AWS::EKS::Nodegroup.InstanceTypes`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 285
          },
          "name": "instanceTypes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-labels",
            "stability": "external",
            "summary": "`AWS::EKS::Nodegroup.Labels`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 291
          },
          "name": "labels",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-nodegroupname",
            "stability": "external",
            "summary": "`AWS::EKS::Nodegroup.NodegroupName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 297
          },
          "name": "nodegroupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-releaseversion",
            "stability": "external",
            "summary": "`AWS::EKS::Nodegroup.ReleaseVersion`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 303
          },
          "name": "releaseVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-remoteaccess",
            "stability": "external",
            "summary": "`AWS::EKS::Nodegroup.RemoteAccess`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 309
          },
          "name": "remoteAccess",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-eks.CfnNodegroup.RemoteAccessProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-scalingconfig",
            "stability": "external",
            "summary": "`AWS::EKS::Nodegroup.ScalingConfig`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 315
          },
          "name": "scalingConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-eks.CfnNodegroup.ScalingConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-tags",
            "stability": "external",
            "summary": "`AWS::EKS::Nodegroup.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 321
          },
          "name": "tags",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-version",
            "stability": "external",
            "summary": "`AWS::EKS::Nodegroup.Version`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 327
          },
          "name": "version",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-eks.Cluster": {
      "assembly": "@aws-cdk/aws-eks",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "remarks": "This is a fully managed cluster of API Servers (control-plane)\nThe user is still required to create the worker nodes.",
        "stability": "experimental",
        "summary": "A Cluster represents a managed Kubernetes Service (EKS)."
      },
      "fqn": "@aws-cdk/aws-eks.Cluster",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Initiates an EKS Cluster with the supplied arguments."
        },
        "parameters": [
          {
            "docs": {
              "summary": "a Construct, most likely a cdk.Stack created."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "properties in the IClusterProps interface."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-eks.ClusterProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-eks.ICluster"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cluster.ts",
        "line": 250
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Import an existing cluster."
          },
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 258
          },
          "name": "fromClusterAttributes",
          "parameters": [
            {
              "docs": {
                "summary": "the construct scope, in most cases 'this'."
              },
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "docs": {
                "summary": "the id or name to import as."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "the cluster properties to use for importing information."
              },
              "name": "attrs",
              "type": {
                "fqn": "@aws-cdk/aws-eks.ClusterAttributes"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-eks.ICluster"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "The AutoScalingGroup must be running an EKS-optimized AMI containing the\n/etc/eks/bootstrap.sh script. This method will configure Security Groups,\nadd the right policies to the instance role, apply the right tags, and add\nthe required user data to the instance's launch configuration.\n\nSpot instances will be labeled `lifecycle=Ec2Spot` and tainted with `PreferNoSchedule`.\nIf kubectl is enabled, the\n[spot interrupt handler](https://github.com/awslabs/ec2-spot-labs/tree/master/ec2-spot-eks-solution/spot-termination-handler)\ndaemon will be installed on all spot instances to handle\n[EC2 Spot Instance Termination Notices](https://aws.amazon.com/blogs/aws/new-ec2-spot-instance-termination-notices/).\n\nPrefer to use `addCapacity` if possible.",
            "see": "https://docs.aws.amazon.com/eks/latest/userguide/launch-workers.html",
            "stability": "experimental",
            "summary": "Add compute capacity to this EKS cluster in the form of an AutoScalingGroup."
          },
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 493
          },
          "name": "addAutoScalingGroup",
          "parameters": [
            {
              "docs": {
                "summary": "[disable-awslint:ref-via-interface]."
              },
              "name": "autoScalingGroup",
              "type": {
                "fqn": "@aws-cdk/aws-autoscaling.AutoScalingGroup"
              }
            },
            {
              "docs": {
                "summary": "options for adding auto scaling groups, like customizing the bootstrap script."
              },
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-eks.AutoScalingGroupOptions"
              }
            }
          ]
        },
        {
          "docs": {
            "remarks": "The nodes will automatically be configured with the right VPC and AMI\nfor the instance type and Kubernetes version.\n\nSpot instances will be labeled `lifecycle=Ec2Spot` and tainted with `PreferNoSchedule`.\nIf kubectl is enabled, the\n[spot interrupt handler](https://github.com/awslabs/ec2-spot-labs/tree/master/ec2-spot-eks-solution/spot-termination-handler)\ndaemon will be installed on all spot instances to handle\n[EC2 Spot Instance Termination Notices](https://aws.amazon.com/blogs/aws/new-ec2-spot-instance-termination-notices/).",
            "stability": "experimental",
            "summary": "Add nodes to this EKS cluster."
          },
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 452
          },
          "name": "addCapacity",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-eks.CapacityOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.AutoScalingGroup"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "throws": "If `kubectlEnabled` is `false`"
            },
            "returns": "a `HelmChart` object",
            "stability": "experimental",
            "summary": "Defines a Helm chart in this cluster."
          },
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 595
          },
          "name": "addChart",
          "parameters": [
            {
              "docs": {
                "summary": "logical id of this chart."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "options of this chart."
              },
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-eks.HelmChartOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-eks.HelmChart"
            }
          }
        },
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/eks/latest/userguide/fargate-profile.html",
            "stability": "experimental",
            "summary": "Adds a Fargate profile to this cluster."
          },
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 606
          },
          "name": "addFargateProfile",
          "parameters": [
            {
              "docs": {
                "summary": "the id of this profile."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "profile options."
              },
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-eks.FargateProfileOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-eks.FargateProfile"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "throws": "If `kubectlEnabled` is `false`"
            },
            "remarks": "The manifest will be applied/deleted using kubectl as needed.",
            "returns": "a `KubernetesResource` object.",
            "stability": "experimental",
            "summary": "Defines a Kubernetes resource in this cluster."
          },
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 583
          },
          "name": "addResource",
          "parameters": [
            {
              "docs": {
                "summary": "logical id of this manifest."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "a list of Kubernetes resource specifications."
              },
              "name": "manifest",
              "type": {
                "primitive": "any"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-eks.KubernetesResource"
            }
          },
          "variadic": true
        }
      ],
      "name": "Cluster",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Lazily creates the AwsAuth resource, which manages AWS authentication mapping."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 561
          },
          "name": "awsAuth",
          "type": {
            "fqn": "@aws-cdk/aws-eks.AwsAuth"
          }
        },
        {
          "docs": {
            "example": "arn:aws:eks:us-west-2:666666666666:cluster/prod",
            "stability": "experimental",
            "summary": "The AWS generated ARN for the Cluster resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 277
          },
          "name": "clusterArn",
          "overrides": "@aws-cdk/aws-eks.ICluster",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The certificate-authority-data for your cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 291
          },
          "name": "clusterCertificateAuthorityData",
          "overrides": "@aws-cdk/aws-eks.ICluster",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "example": "https://5E1D0CEXAMPLEA591B746AFC5AB30262.yl4.us-west-2.eks.amazonaws.com",
            "remarks": "This is the URL inside the kubeconfig file to use with kubectl",
            "stability": "experimental",
            "summary": "The endpoint URL for the Cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 286
          },
          "name": "clusterEndpoint",
          "overrides": "@aws-cdk/aws-eks.ICluster",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The Name of the created EKS Cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 270
          },
          "name": "clusterName",
          "overrides": "@aws-cdk/aws-eks.ICluster",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "memberof": "Cluster",
              "type": "{ec2.Connections}"
            },
            "stability": "experimental",
            "summary": "Manages connection rules (Security Group Rules) for the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 299
          },
          "name": "connections",
          "overrides": "@aws-cdk/aws-ec2.IConnectable",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.Connections"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Indicates if `kubectl` related operations can be performed on this cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 309
          },
          "name": "kubectlEnabled",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "IAM role assumed by the EKS Control Plane."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 304
          },
          "name": "role",
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The VPC in which this Cluster was created."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 265
          },
          "name": "vpc",
          "overrides": "@aws-cdk/aws-eks.ICluster",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IVpc"
          }
        },
        {
          "docs": {
            "remarks": "This will be `undefined` if the default capacity is set to 0.",
            "stability": "experimental",
            "summary": "The auto scaling group that hosts the default capacity for this cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 315
          },
          "name": "defaultCapacity",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.AutoScalingGroup"
          }
        }
      ]
    },
    "@aws-cdk/aws-eks.ClusterAttributes": {
      "assembly": "@aws-cdk/aws-eks",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Attributes for EKS clusters."
      },
      "fqn": "@aws-cdk/aws-eks.ClusterAttributes",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cluster.ts",
        "line": 58
      },
      "name": "ClusterAttributes",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The unique ARN assigned to the service by AWS in the form of arn:aws:eks:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 73
          },
          "name": "clusterArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The certificate-authority-data for your cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 83
          },
          "name": "clusterCertificateAuthorityData",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The API Server endpoint URL."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 78
          },
          "name": "clusterEndpoint",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The physical name of the Cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 67
          },
          "name": "clusterName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The security groups associated with this cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 88
          },
          "name": "securityGroups",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The VPC in which this Cluster was created."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 62
          },
          "name": "vpc",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IVpc"
          }
        }
      ]
    },
    "@aws-cdk/aws-eks.ClusterOptions": {
      "assembly": "@aws-cdk/aws-eks",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Options for configuring an EKS cluster."
      },
      "fqn": "@aws-cdk/aws-eks.ClusterOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cluster.ts",
        "line": 94
      },
      "name": "ClusterOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- Automatically generated name",
            "stability": "experimental",
            "summary": "Name for the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 131
          },
          "name": "clusterName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "CoreDnsComputeType.EC2 (for `FargateCluster` the default is FARGATE)",
            "stability": "experimental",
            "summary": "Controls the \"eks.amazonaws.com/compute-type\" annotation in the CoreDNS configuration on your cluster to determine which compute type to use for CoreDNS."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 168
          },
          "name": "coreDnsComputeType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-eks.CoreDnsComputeType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- By default, it will only possible to update this Kubernetes\n  system by adding resources to this cluster via `addResource` or\n  by defining `KubernetesResource` resources in your AWS CDK app.\n  Use this if you wish to grant cluster administration privileges\n  to another role.",
            "see": "https://kubernetes.io/docs/reference/access-authn-authz/rbac/#default-roles-and-role-bindings",
            "stability": "experimental",
            "summary": "An IAM role that will be added to the `system:masters` Kubernetes RBAC group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 159
          },
          "name": "mastersRole",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Determines whether a CloudFormation output with the name of the cluster will be synthesized."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 176
          },
          "name": "outputClusterName",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "This command will include\nthe cluster name and, if applicable, the ARN of the masters IAM role.",
            "stability": "experimental",
            "summary": "Determines whether a CloudFormation output with the `aws eks update-kubeconfig` command will be synthesized."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 193
          },
          "name": "outputConfigCommand",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Determines whether a CloudFormation output with the ARN of the \"masters\" IAM role will be synthesized (if `mastersRole` is specified)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 184
          },
          "name": "outputMastersRoleArn",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- A role is automatically created for you",
            "stability": "experimental",
            "summary": "Role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 124
          },
          "name": "role",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- A security group is automatically created",
            "stability": "experimental",
            "summary": "Security Group to use for Control Plane ENIs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 138
          },
          "name": "securityGroup",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- If not supplied, will use Amazon default version",
            "stability": "experimental",
            "summary": "The Kubernetes version to run in the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 145
          },
          "name": "version",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- a VPC with default configuration will be created and can be accessed through `cluster.vpc`.",
            "stability": "experimental",
            "summary": "The VPC in which to create the Cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 100
          },
          "name": "vpc",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IVpc"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- All public and private subnets",
            "remarks": "If you want to create public load balancers, this must include public subnets.\n\nFor example, to only select private subnets, supply the following:\n\n```ts\nvpcSubnets: [\n   { subnetType: ec2.SubnetType.Private }\n]\n```",
            "stability": "experimental",
            "summary": "Where to place EKS Control Plane ENIs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 117
          },
          "name": "vpcSubnets",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.SubnetSelection"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-eks.ClusterProps": {
      "assembly": "@aws-cdk/aws-eks",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Configuration props for EKS clusters."
      },
      "fqn": "@aws-cdk/aws-eks.ClusterProps",
      "interfaces": [
        "@aws-cdk/aws-eks.ClusterOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cluster.ts",
        "line": 199
      },
      "name": "ClusterProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "2",
            "remarks": "Instance type can be configured through `defaultCapacityInstanceType`,\nwhich defaults to `m5.large`.\n\nUse `cluster.addCapacity` to add additional customized capacity. Set this\nto `0` is you wish to avoid the initial capacity allocation.",
            "stability": "experimental",
            "summary": "Number of instances to allocate as an initial capacity for this cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 233
          },
          "name": "defaultCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "m5.large",
            "remarks": "This will only be taken\ninto account if `defaultCapacity` is > 0.",
            "stability": "experimental",
            "summary": "The instance type to use for the default capacity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 241
          },
          "name": "defaultCapacityInstance",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InstanceType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true The cluster can be managed by the AWS CDK application.",
            "remarks": "If this is disabled, it will not be possible to use the following\ncapabilities:\n- `addResource`\n- `addRoleMapping`\n- `addUserMapping`\n- `addMastersRole` and `props.mastersRole`\n\nIf this is disabled, the cluster can only be managed by issuing `kubectl`\ncommands from a session that uses the IAM role/user that created the\naccount.\n\n_NOTE_: changing this value will destoy the cluster. This is because a\nmanagable cluster must be created using an AWS CloudFormation custom\nresource which executes with an IAM role owned by the CDK app.",
            "stability": "experimental",
            "summary": "Allows defining `kubectrl`-related resources on this cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 221
          },
          "name": "kubectlEnabled",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ]
    },
    "@aws-cdk/aws-eks.CoreDnsComputeType": {
      "assembly": "@aws-cdk/aws-eks",
      "docs": {
        "stability": "experimental",
        "summary": "The type of compute resources to use for CoreDNS."
      },
      "fqn": "@aws-cdk/aws-eks.CoreDnsComputeType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/cluster.ts",
        "line": 925
      },
      "members": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Deploy CoreDNS on EC2 instances."
          },
          "name": "EC2"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Deploy CoreDNS on Fargate-managed instances."
          },
          "name": "FARGATE"
        }
      ],
      "name": "CoreDnsComputeType"
    },
    "@aws-cdk/aws-eks.EksOptimizedImage": {
      "assembly": "@aws-cdk/aws-eks",
      "docs": {
        "stability": "experimental",
        "summary": "Construct an Amazon Linux 2 image from the latest EKS Optimized AMI published in SSM."
      },
      "fqn": "@aws-cdk/aws-eks.EksOptimizedImage",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Constructs a new instance of the EcsOptimizedAmi class."
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-eks.EksOptimizedImageProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.IMachineImage"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cluster.ts",
        "line": 872
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Return the correct image."
          },
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 895
          },
          "name": "getImage",
          "overrides": "@aws-cdk/aws-ec2.IMachineImage",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.MachineImageConfig"
            }
          }
        }
      ],
      "name": "EksOptimizedImage"
    },
    "@aws-cdk/aws-eks.EksOptimizedImageProps": {
      "assembly": "@aws-cdk/aws-eks",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties for EksOptimizedImage."
      },
      "fqn": "@aws-cdk/aws-eks.EksOptimizedImageProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cluster.ts",
        "line": 853
      },
      "name": "EksOptimizedImageProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- The latest version",
            "stability": "experimental",
            "summary": "The Kubernetes version to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 866
          },
          "name": "kubernetesVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "NodeType.STANDARD",
            "stability": "experimental",
            "summary": "What instance type to retrieve the image for (standard or GPU-optimized)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 859
          },
          "name": "nodeType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-eks.NodeType"
          }
        }
      ]
    },
    "@aws-cdk/aws-eks.FargateCluster": {
      "assembly": "@aws-cdk/aws-eks",
      "base": "@aws-cdk/aws-eks.Cluster",
      "docs": {
        "remarks": "The cluster is created with a default Fargate Profile that matches the\n\"default\" and \"kube-system\" namespaces. You can add additional profiles using\n`addFargateProfile`.",
        "stability": "experimental",
        "summary": "Defines an EKS cluster that runs entirely on AWS Fargate."
      },
      "fqn": "@aws-cdk/aws-eks.FargateCluster",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-eks.FargateClusterProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/fargate-cluster.ts",
        "line": 25
      },
      "name": "FargateCluster"
    },
    "@aws-cdk/aws-eks.FargateClusterProps": {
      "assembly": "@aws-cdk/aws-eks",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Configuration props for EKS Fargate."
      },
      "fqn": "@aws-cdk/aws-eks.FargateClusterProps",
      "interfaces": [
        "@aws-cdk/aws-eks.ClusterOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/fargate-cluster.ts",
        "line": 8
      },
      "name": "FargateClusterProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- A profile called \"default\" with 'default' and 'kube-system'\n  selectors will be created if this is left undefined.",
            "stability": "experimental",
            "summary": "Fargate Profile to create along with the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/fargate-cluster.ts",
            "line": 15
          },
          "name": "defaultProfile",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-eks.FargateProfileOptions"
          }
        }
      ]
    },
    "@aws-cdk/aws-eks.FargateProfile": {
      "assembly": "@aws-cdk/aws-eks",
      "base": "@aws-cdk/core.Construct",
      "docs": {
        "remarks": "This declaration is done through the profile’s selectors. Each\nprofile can have up to five selectors that contain a namespace and optional\nlabels. You must define a namespace for every selector. The label field\nconsists of multiple optional key-value pairs. Pods that match a selector (by\nmatching a namespace for the selector and all of the labels specified in the\nselector) are scheduled on Fargate. If a namespace selector is defined\nwithout any labels, Amazon EKS will attempt to schedule all pods that run in\nthat namespace onto Fargate using the profile. If a to-be-scheduled pod\nmatches any of the selectors in the Fargate profile, then that pod is\nscheduled on Fargate.\n\nIf a pod matches multiple Fargate profiles, Amazon EKS picks one of the\nmatches at random. In this case, you can specify which profile a pod should\nuse by adding the following Kubernetes label to the pod specification:\neks.amazonaws.com/fargate-profile: profile_name. However, the pod must still\nmatch a selector in that profile in order to be scheduled onto Fargate.",
        "stability": "experimental",
        "summary": "Fargate profiles allows an administrator to declare which pods run on Fargate."
      },
      "fqn": "@aws-cdk/aws-eks.FargateProfile",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-eks.FargateProfileProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.ITaggable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/fargate-profile.ts",
        "line": 112
      },
      "name": "FargateProfile",
      "properties": [
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The full Amazon Resource Name (ARN) of the Fargate profile."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/fargate-profile.ts",
            "line": 119
          },
          "name": "fargateProfileArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The name of the Fargate profile."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/fargate-profile.ts",
            "line": 126
          },
          "name": "fargateProfileName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Resource tags."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/fargate-profile.ts",
            "line": 131
          },
          "name": "tags",
          "overrides": "@aws-cdk/core.ITaggable",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        }
      ]
    },
    "@aws-cdk/aws-eks.FargateProfileOptions": {
      "assembly": "@aws-cdk/aws-eks",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Options for defining EKS Fargate Profiles."
      },
      "fqn": "@aws-cdk/aws-eks.FargateProfileOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/fargate-profile.ts",
        "line": 12
      },
      "name": "FargateProfileOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Each selector\nmust have an associated namespace. Optionally, you can also specify labels\nfor a namespace.\n\nAt least one selector is required and you may specify up to five selectors.",
            "stability": "experimental",
            "summary": "The selectors to match for pods to use this Fargate profile."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/fargate-profile.ts",
            "line": 37
          },
          "name": "selectors",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-eks.Selector"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- generated",
            "stability": "experimental",
            "summary": "The name of the Fargate profile."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/fargate-profile.ts",
            "line": 17
          },
          "name": "fargateProfileName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- a role will be automatically created",
            "remarks": "The pod execution role allows Fargate infrastructure to\nregister with your cluster as a node, and it provides read access to Amazon\nECR image repositories.",
            "see": "https://docs.aws.amazon.com/eks/latest/userguide/pod-execution-role.html",
            "stability": "experimental",
            "summary": "The pod execution role to use for pods that match the selectors in the Fargate profile."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/fargate-profile.ts",
            "line": 28
          },
          "name": "podExecutionRole",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- all private subnets of the VPC are selected.",
            "remarks": "At this time, pods running\non Fargate are not assigned public IP addresses, so only private subnets\n(with no direct route to an Internet Gateway) are allowed.",
            "stability": "experimental",
            "summary": "Select which subnets to launch your pods into."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/fargate-profile.ts",
            "line": 56
          },
          "name": "subnetSelection",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.SubnetSelection"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- all private subnets used by theEKS cluster",
            "remarks": "By default, all private subnets are selected. You can customize this using\n`subnetSelection`.",
            "stability": "experimental",
            "summary": "The VPC from which to select subnets to launch your pods into."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/fargate-profile.ts",
            "line": 47
          },
          "name": "vpc",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IVpc"
          }
        }
      ]
    },
    "@aws-cdk/aws-eks.FargateProfileProps": {
      "assembly": "@aws-cdk/aws-eks",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Configuration props for EKS Fargate Profiles."
      },
      "fqn": "@aws-cdk/aws-eks.FargateProfileProps",
      "interfaces": [
        "@aws-cdk/aws-eks.FargateProfileOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/fargate-profile.ts",
        "line": 62
      },
      "name": "FargateProfileProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "[disable-awslint:ref-via-interface]",
            "stability": "experimental",
            "summary": "The EKS cluster to apply the Fargate profile to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/fargate-profile.ts",
            "line": 67
          },
          "name": "cluster",
          "type": {
            "fqn": "@aws-cdk/aws-eks.Cluster"
          }
        }
      ]
    },
    "@aws-cdk/aws-eks.HelmChart": {
      "assembly": "@aws-cdk/aws-eks",
      "base": "@aws-cdk/core.Construct",
      "docs": {
        "remarks": "Applies/deletes the resources using `kubectl` in sync with the resource.",
        "stability": "experimental",
        "summary": "Represents a helm chart within the Kubernetes system."
      },
      "fqn": "@aws-cdk/aws-eks.HelmChart",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-eks.HelmChartProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/helm-chart.ts",
        "line": 71
      },
      "name": "HelmChart",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "The CloudFormation reosurce type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/helm-chart.ts",
            "line": 75
          },
          "name": "RESOURCE_TYPE",
          "static": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-eks.HelmChartOptions": {
      "assembly": "@aws-cdk/aws-eks",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Helm Chart options."
      },
      "fqn": "@aws-cdk/aws-eks.HelmChartOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/helm-chart.ts",
        "line": 10
      },
      "name": "HelmChartOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The name of the chart."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/helm-chart.ts",
            "line": 14
          },
          "name": "chart",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "default",
            "stability": "experimental",
            "summary": "The Kubernetes namespace scope of the requests."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/helm-chart.ts",
            "line": 38
          },
          "name": "namespace",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- If no release name is given, it will use the last 53 characters of the node's unique id.",
            "stability": "experimental",
            "summary": "The name of the release."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/helm-chart.ts",
            "line": 20
          },
          "name": "release",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No repository will be used, which means that the chart needs to be an absolute URL.",
            "remarks": "For example: https://kubernetes-charts.storage.googleapis.com/",
            "stability": "experimental",
            "summary": "The repository which contains the chart."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/helm-chart.ts",
            "line": 32
          },
          "name": "repository",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No values are provided to the chart.",
            "stability": "experimental",
            "summary": "The values to be used by the chart."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/helm-chart.ts",
            "line": 44
          },
          "name": "values",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- If this is not specified, the latest version is installed",
            "stability": "experimental",
            "summary": "The chart version to install."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/helm-chart.ts",
            "line": 26
          },
          "name": "version",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Helm will not wait before marking release as successful",
            "stability": "experimental",
            "summary": "Whether or not Helm should wait until all Pods, PVCs, Services, and minimum number of Pods of a Deployment, StatefulSet, or ReplicaSet are in a ready state before marking the release as successful."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/helm-chart.ts",
            "line": 51
          },
          "name": "wait",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ]
    },
    "@aws-cdk/aws-eks.HelmChartProps": {
      "assembly": "@aws-cdk/aws-eks",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Helm Chart properties."
      },
      "fqn": "@aws-cdk/aws-eks.HelmChartProps",
      "interfaces": [
        "@aws-cdk/aws-eks.HelmChartOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/helm-chart.ts",
        "line": 57
      },
      "name": "HelmChartProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "[disable-awslint:ref-via-interface]",
            "stability": "experimental",
            "summary": "The EKS cluster to apply this configuration to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/helm-chart.ts",
            "line": 63
          },
          "name": "cluster",
          "type": {
            "fqn": "@aws-cdk/aws-eks.Cluster"
          }
        }
      ]
    },
    "@aws-cdk/aws-eks.ICluster": {
      "assembly": "@aws-cdk/aws-eks",
      "docs": {
        "stability": "experimental",
        "summary": "An EKS cluster."
      },
      "fqn": "@aws-cdk/aws-eks.ICluster",
      "interfaces": [
        "@aws-cdk/core.IResource",
        "@aws-cdk/aws-ec2.IConnectable"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cluster.ts",
        "line": 23
      },
      "name": "ICluster",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The unique ARN assigned to the service by AWS in the form of arn:aws:eks:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 40
          },
          "name": "clusterArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The certificate-authority-data for your cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 52
          },
          "name": "clusterCertificateAuthorityData",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The API Server endpoint URL."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 46
          },
          "name": "clusterEndpoint",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The physical name of the Cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 33
          },
          "name": "clusterName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The VPC in which this Cluster was created."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 27
          },
          "name": "vpc",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IVpc"
          }
        }
      ]
    },
    "@aws-cdk/aws-eks.KubernetesResource": {
      "assembly": "@aws-cdk/aws-eks",
      "base": "@aws-cdk/core.Construct",
      "docs": {
        "remarks": "Alternatively, you can use `cluster.addResource(resource[, resource, ...])`\nto define resources on this cluster.\n\nApplies/deletes the resources using `kubectl` in sync with the resource.",
        "stability": "experimental",
        "summary": "Represents a resource within the Kubernetes system."
      },
      "fqn": "@aws-cdk/aws-eks.KubernetesResource",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-eks.KubernetesResourceProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/k8s-resource.ts",
        "line": 49
      },
      "name": "KubernetesResource",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "The CloudFormation reosurce type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/k8s-resource.ts",
            "line": 53
          },
          "name": "RESOURCE_TYPE",
          "static": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-eks.KubernetesResourceProps": {
      "assembly": "@aws-cdk/aws-eks",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties for KubernetesResources."
      },
      "fqn": "@aws-cdk/aws-eks.KubernetesResourceProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/k8s-resource.ts",
        "line": 9
      },
      "name": "KubernetesResourceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "[disable-awslint:ref-via-interface]",
            "stability": "experimental",
            "summary": "The EKS cluster to apply this configuration to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/k8s-resource.ts",
            "line": 15
          },
          "name": "cluster",
          "type": {
            "fqn": "@aws-cdk/aws-eks.Cluster"
          }
        },
        {
          "abstract": true,
          "docs": {
            "example": "{\n  apiVersion: 'v1',\n  kind: 'Pod',\n  metadata: { name: 'mypod' },\n  spec: {\n    containers: [ { name: 'hello', image: 'paulbouwer/hello-kubernetes:1.5', ports: [ { containerPort: 8080 } ] } ]\n  }\n}",
            "remarks": "Consists of any number of child resources.\n\nWhen the resource is created/updated, this manifest will be applied to the\ncluster through `kubectl apply` and when the resource or the stack is\ndeleted, the manifest will be deleted through `kubectl delete`.",
            "stability": "experimental",
            "summary": "The resource manifest."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/k8s-resource.ts",
            "line": 38
          },
          "name": "manifest",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-eks.NodeType": {
      "assembly": "@aws-cdk/aws-eks",
      "docs": {
        "stability": "experimental",
        "summary": "Whether the worker nodes should support GPU or just standard instances."
      },
      "fqn": "@aws-cdk/aws-eks.NodeType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/cluster.ts",
        "line": 910
      },
      "members": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Standard instances."
          },
          "name": "STANDARD"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "GPU instances."
          },
          "name": "GPU"
        }
      ],
      "name": "NodeType"
    },
    "@aws-cdk/aws-eks.Selector": {
      "assembly": "@aws-cdk/aws-eks",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Fargate profile selector."
      },
      "fqn": "@aws-cdk/aws-eks.Selector",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/fargate-profile.ts",
        "line": 73
      },
      "name": "Selector",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "You must specify a namespace for a selector. The selector only matches pods\nthat are created in this namespace, but you can create multiple selectors\nto target multiple namespaces.",
            "stability": "experimental",
            "summary": "The Kubernetes namespace that the selector should match."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/fargate-profile.ts",
            "line": 81
          },
          "name": "namespace",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- all pods within the namespace will be selected.",
            "remarks": "A pod must contain\nall of the labels that are specified in the selector for it to be\nconsidered a match.",
            "stability": "experimental",
            "summary": "The Kubernetes labels that the selector should match."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/fargate-profile.ts",
            "line": 90
          },
          "name": "labels",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        }
      ]
    }
  },
  "version": "1.27.0",
  "fingerprint": "LD+8ZAGBDdQLEgHTaqZxFSaW1u7NHUVTxHQrIMjVefs="
}
