{
  "Resources": {
    "Vpc8378EB38": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "InfraStack/Vpc"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "InfraStack/Vpc/Resource"
      }
    },
    "VpcPublicSubnet1Subnet5C2D37C4": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.0.0/19",
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "AvailabilityZone": "us-east-2a",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "Name",
            "Value": "InfraStack/Vpc/PublicSubnet1"
          },
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "InfraStack/Vpc/PublicSubnet1/Subnet"
      }
    },
    "VpcPublicSubnet1RouteTable6C95E38E": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "InfraStack/Vpc/PublicSubnet1"
          },
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "InfraStack/Vpc/PublicSubnet1/RouteTable"
      }
    },
    "VpcPublicSubnet1RouteTableAssociation97140677": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet1RouteTable6C95E38E"
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet1Subnet5C2D37C4"
        }
      },
      "Metadata": {
        "aws:cdk:path": "InfraStack/Vpc/PublicSubnet1/RouteTableAssociation"
      }
    },
    "VpcPublicSubnet1DefaultRoute3DA9E72A": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet1RouteTable6C95E38E"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIGWD7BA715C"
        }
      },
      "DependsOn": [
        "VpcVPCGWBF912B6E"
      ],
      "Metadata": {
        "aws:cdk:path": "InfraStack/Vpc/PublicSubnet1/DefaultRoute"
      }
    },
    "VpcPublicSubnet1EIPD7E02669": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "InfraStack/Vpc/PublicSubnet1"
          },
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "InfraStack/Vpc/PublicSubnet1/EIP"
      }
    },
    "VpcPublicSubnet1NATGateway4D7517AA": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "VpcPublicSubnet1EIPD7E02669",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet1Subnet5C2D37C4"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "InfraStack/Vpc/PublicSubnet1"
          },
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "InfraStack/Vpc/PublicSubnet1/NATGateway"
      }
    },
    "VpcPublicSubnet2Subnet691E08A3": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.32.0/19",
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "AvailabilityZone": "us-east-2b",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "Name",
            "Value": "InfraStack/Vpc/PublicSubnet2"
          },
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "InfraStack/Vpc/PublicSubnet2/Subnet"
      }
    },
    "VpcPublicSubnet2RouteTable94F7E489": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "InfraStack/Vpc/PublicSubnet2"
          },
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "InfraStack/Vpc/PublicSubnet2/RouteTable"
      }
    },
    "VpcPublicSubnet2RouteTableAssociationDD5762D8": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet2RouteTable94F7E489"
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet2Subnet691E08A3"
        }
      },
      "Metadata": {
        "aws:cdk:path": "InfraStack/Vpc/PublicSubnet2/RouteTableAssociation"
      }
    },
    "VpcPublicSubnet2DefaultRoute97F91067": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet2RouteTable94F7E489"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIGWD7BA715C"
        }
      },
      "DependsOn": [
        "VpcVPCGWBF912B6E"
      ],
      "Metadata": {
        "aws:cdk:path": "InfraStack/Vpc/PublicSubnet2/DefaultRoute"
      }
    },
    "VpcPublicSubnet3SubnetBE12F0B6": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.64.0/19",
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "AvailabilityZone": "us-east-2c",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "Name",
            "Value": "InfraStack/Vpc/PublicSubnet3"
          },
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "InfraStack/Vpc/PublicSubnet3/Subnet"
      }
    },
    "VpcPublicSubnet3RouteTable93458DBB": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "InfraStack/Vpc/PublicSubnet3"
          },
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "InfraStack/Vpc/PublicSubnet3/RouteTable"
      }
    },
    "VpcPublicSubnet3RouteTableAssociation1F1EDF02": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet3RouteTable93458DBB"
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet3SubnetBE12F0B6"
        }
      },
      "Metadata": {
        "aws:cdk:path": "InfraStack/Vpc/PublicSubnet3/RouteTableAssociation"
      }
    },
    "VpcPublicSubnet3DefaultRoute4697774F": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet3RouteTable93458DBB"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIGWD7BA715C"
        }
      },
      "DependsOn": [
        "VpcVPCGWBF912B6E"
      ],
      "Metadata": {
        "aws:cdk:path": "InfraStack/Vpc/PublicSubnet3/DefaultRoute"
      }
    },
    "VpcPrivateSubnet1Subnet536B997A": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.96.0/19",
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "AvailabilityZone": "us-east-2a",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "Name",
            "Value": "InfraStack/Vpc/PrivateSubnet1"
          },
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "InfraStack/Vpc/PrivateSubnet1/Subnet"
      }
    },
    "VpcPrivateSubnet1RouteTableB2C5B500": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "InfraStack/Vpc/PrivateSubnet1"
          },
          {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "InfraStack/Vpc/PrivateSubnet1/RouteTable"
      }
    },
    "VpcPrivateSubnet1RouteTableAssociation70C59FA6": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet1RouteTableB2C5B500"
        },
        "SubnetId": {
          "Ref": "VpcPrivateSubnet1Subnet536B997A"
        }
      },
      "Metadata": {
        "aws:cdk:path": "InfraStack/Vpc/PrivateSubnet1/RouteTableAssociation"
      }
    },
    "VpcPrivateSubnet1DefaultRouteBE02A9ED": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet1RouteTableB2C5B500"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VpcPublicSubnet1NATGateway4D7517AA"
        }
      },
      "Metadata": {
        "aws:cdk:path": "InfraStack/Vpc/PrivateSubnet1/DefaultRoute"
      }
    },
    "VpcPrivateSubnet2Subnet3788AAA1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.128.0/19",
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "AvailabilityZone": "us-east-2b",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "Name",
            "Value": "InfraStack/Vpc/PrivateSubnet2"
          },
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "InfraStack/Vpc/PrivateSubnet2/Subnet"
      }
    },
    "VpcPrivateSubnet2RouteTableA678073B": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "InfraStack/Vpc/PrivateSubnet2"
          },
          {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "InfraStack/Vpc/PrivateSubnet2/RouteTable"
      }
    },
    "VpcPrivateSubnet2RouteTableAssociationA89CAD56": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet2RouteTableA678073B"
        },
        "SubnetId": {
          "Ref": "VpcPrivateSubnet2Subnet3788AAA1"
        }
      },
      "Metadata": {
        "aws:cdk:path": "InfraStack/Vpc/PrivateSubnet2/RouteTableAssociation"
      }
    },
    "VpcPrivateSubnet2DefaultRoute060D2087": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet2RouteTableA678073B"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VpcPublicSubnet1NATGateway4D7517AA"
        }
      },
      "Metadata": {
        "aws:cdk:path": "InfraStack/Vpc/PrivateSubnet2/DefaultRoute"
      }
    },
    "VpcPrivateSubnet3SubnetF258B56E": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.160.0/19",
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "AvailabilityZone": "us-east-2c",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "Name",
            "Value": "InfraStack/Vpc/PrivateSubnet3"
          },
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "InfraStack/Vpc/PrivateSubnet3/Subnet"
      }
    },
    "VpcPrivateSubnet3RouteTableD98824C7": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "InfraStack/Vpc/PrivateSubnet3"
          },
          {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "InfraStack/Vpc/PrivateSubnet3/RouteTable"
      }
    },
    "VpcPrivateSubnet3RouteTableAssociation16BDDC43": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet3RouteTableD98824C7"
        },
        "SubnetId": {
          "Ref": "VpcPrivateSubnet3SubnetF258B56E"
        }
      },
      "Metadata": {
        "aws:cdk:path": "InfraStack/Vpc/PrivateSubnet3/RouteTableAssociation"
      }
    },
    "VpcPrivateSubnet3DefaultRoute94B74F0D": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet3RouteTableD98824C7"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VpcPublicSubnet1NATGateway4D7517AA"
        }
      },
      "Metadata": {
        "aws:cdk:path": "InfraStack/Vpc/PrivateSubnet3/DefaultRoute"
      }
    },
    "VpcIGWD7BA715C": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "InfraStack/Vpc"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "InfraStack/Vpc/IGW"
      }
    },
    "VpcVPCGWBF912B6E": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "InternetGatewayId": {
          "Ref": "VpcIGWD7BA715C"
        }
      },
      "Metadata": {
        "aws:cdk:path": "InfraStack/Vpc/VPCGW"
      }
    },
    "ClusterRoleFA261979": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "eks.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonEKSClusterPolicy"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonEKSServicePolicy"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "InfraStack/Cluster/Role/Resource"
      }
    },
    "ClusterControlPlaneSecurityGroupD274242C": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "EKS Control Plane Security Group",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38"
        }
      },
      "Metadata": {
        "aws:cdk:path": "InfraStack/Cluster/ControlPlaneSecurityGroup/Resource"
      }
    },
    "ClusterControlPlaneSecurityGroupfromInfraStackClusterDefaultCapacityInstanceSecurityGroup8B0B00B744370DAF73C": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "from InfraStackClusterDefaultCapacityInstanceSecurityGroup8B0B00B7:443",
        "FromPort": 443,
        "GroupId": {
          "Fn::GetAtt": [
            "ClusterControlPlaneSecurityGroupD274242C",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "ClusterDefaultCapacityInstanceSecurityGroup8FDF4D48",
            "GroupId"
          ]
        },
        "ToPort": 443
      },
      "Metadata": {
        "aws:cdk:path": "InfraStack/Cluster/ControlPlaneSecurityGroup/from InfraStackClusterDefaultCapacityInstanceSecurityGroup8B0B00B7:443"
      }
    },
    "ClusterCreationRole360249B6": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": [
                  {
                    "Fn::GetAtt": [
                      "awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454",
                      "Outputs.InfraStackawscdkawseksClusterResourceProviderOnEventHandlerServiceRoleE1035B45Arn"
                    ]
                  },
                  {
                    "Fn::GetAtt": [
                      "awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454",
                      "Outputs.InfraStackawscdkawseksClusterResourceProviderIsCompleteHandlerServiceRole3A8BDB99Arn"
                    ]
                  }
                ]
              }
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
                    "Outputs.InfraStackawscdkawseksKubectlProviderHandlerServiceRoleDBC46FE3Arn"
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "InfraStack/Cluster/Resource/CreationRole/Resource"
      }
    },
    "ClusterCreationRoleDefaultPolicyE8BDFC7B": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "ClusterRoleFA261979",
                  "Arn"
                ]
              }
            },
            {
              "Action": "ec2:DescribeSubnets",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "eks:CreateCluster",
                "eks:DescribeCluster",
                "eks:DeleteCluster",
                "eks:UpdateClusterVersion",
                "eks:UpdateClusterConfig",
                "eks:CreateFargateProfile"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "eks:DescribeFargateProfile",
                "eks:DeleteFargateProfile"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "iam:GetRole",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "iam:CreateServiceLinkedRole",
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "ClusterCreationRoleDefaultPolicyE8BDFC7B",
        "Roles": [
          {
            "Ref": "ClusterCreationRole360249B6"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "InfraStack/Cluster/Resource/CreationRole/DefaultPolicy/Resource"
      }
    },
    "Cluster9EE0221C": {
      "Type": "Custom::AWSCDK-EKS-Cluster",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454",
            "Outputs.InfraStackawscdkawseksClusterResourceProviderframeworkonEvent91448768Arn"
          ]
        },
        "Config": {
          "roleArn": {
            "Fn::GetAtt": [
              "ClusterRoleFA261979",
              "Arn"
            ]
          },
          "resourcesVpcConfig": {
            "securityGroupIds": [
              {
                "Fn::GetAtt": [
                  "ClusterControlPlaneSecurityGroupD274242C",
                  "GroupId"
                ]
              }
            ],
            "subnetIds": [
              {
                "Ref": "VpcPublicSubnet1Subnet5C2D37C4"
              },
              {
                "Ref": "VpcPublicSubnet2Subnet691E08A3"
              },
              {
                "Ref": "VpcPublicSubnet3SubnetBE12F0B6"
              },
              {
                "Ref": "VpcPrivateSubnet1Subnet536B997A"
              },
              {
                "Ref": "VpcPrivateSubnet2Subnet3788AAA1"
              },
              {
                "Ref": "VpcPrivateSubnet3SubnetF258B56E"
              }
            ]
          }
        },
        "AssumeRoleArn": {
          "Fn::GetAtt": [
            "ClusterCreationRole360249B6",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "ClusterCreationRoleDefaultPolicyE8BDFC7B",
        "ClusterCreationRole360249B6"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "InfraStack/Cluster/Resource/Resource/Default"
      }
    },
    "ClusterDefaultCapacityInstanceSecurityGroup8FDF4D48": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "InfraStack/Cluster/DefaultCapacity/InstanceSecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "InfraStack/Cluster/DefaultCapacity"
          },
          {
            "Key": {
              "Fn::Join": [
                "",
                [
                  "kubernetes.io/cluster/",
                  {
                    "Ref": "Cluster9EE0221C"
                  }
                ]
              ]
            },
            "Value": "owned"
          }
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38"
        }
      },
      "Metadata": {
        "aws:cdk:path": "InfraStack/Cluster/DefaultCapacity/InstanceSecurityGroup/Resource"
      }
    },
    "ClusterDefaultCapacityInstanceSecurityGroupfromInfraStackClusterDefaultCapacityInstanceSecurityGroup8B0B00B7ALLTRAFFIC48E2804F": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "-1",
        "Description": "from InfraStackClusterDefaultCapacityInstanceSecurityGroup8B0B00B7:ALL TRAFFIC",
        "GroupId": {
          "Fn::GetAtt": [
            "ClusterDefaultCapacityInstanceSecurityGroup8FDF4D48",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "ClusterDefaultCapacityInstanceSecurityGroup8FDF4D48",
            "GroupId"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "InfraStack/Cluster/DefaultCapacity/InstanceSecurityGroup/from InfraStackClusterDefaultCapacityInstanceSecurityGroup8B0B00B7:ALL TRAFFIC"
      }
    },
    "ClusterDefaultCapacityInstanceSecurityGroupfromInfraStackClusterControlPlaneSecurityGroupDEF13CAA443964235E8": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "from InfraStackClusterControlPlaneSecurityGroupDEF13CAA:443",
        "FromPort": 443,
        "GroupId": {
          "Fn::GetAtt": [
            "ClusterDefaultCapacityInstanceSecurityGroup8FDF4D48",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "ClusterControlPlaneSecurityGroupD274242C",
            "GroupId"
          ]
        },
        "ToPort": 443
      },
      "Metadata": {
        "aws:cdk:path": "InfraStack/Cluster/DefaultCapacity/InstanceSecurityGroup/from InfraStackClusterControlPlaneSecurityGroupDEF13CAA:443"
      }
    },
    "ClusterDefaultCapacityInstanceSecurityGroupfromInfraStackClusterControlPlaneSecurityGroupDEF13CAA102565535B0071A27": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "from InfraStackClusterControlPlaneSecurityGroupDEF13CAA:1025-65535",
        "FromPort": 1025,
        "GroupId": {
          "Fn::GetAtt": [
            "ClusterDefaultCapacityInstanceSecurityGroup8FDF4D48",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "ClusterControlPlaneSecurityGroupD274242C",
            "GroupId"
          ]
        },
        "ToPort": 65535
      },
      "Metadata": {
        "aws:cdk:path": "InfraStack/Cluster/DefaultCapacity/InstanceSecurityGroup/from InfraStackClusterControlPlaneSecurityGroupDEF13CAA:1025-65535"
      }
    },
    "ClusterDefaultCapacityInstanceRole3E209969": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonEKSWorkerNodePolicy"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonEKS_CNI_Policy"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
              ]
            ]
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "InfraStack/Cluster/DefaultCapacity"
          },
          {
            "Key": {
              "Fn::Join": [
                "",
                [
                  "kubernetes.io/cluster/",
                  {
                    "Ref": "Cluster9EE0221C"
                  }
                ]
              ]
            },
            "Value": "owned"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "InfraStack/Cluster/DefaultCapacity/InstanceRole/Resource"
      }
    },
    "ClusterDefaultCapacityInstanceProfile70387741": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [
          {
            "Ref": "ClusterDefaultCapacityInstanceRole3E209969"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "InfraStack/Cluster/DefaultCapacity/InstanceProfile"
      }
    },
    "ClusterDefaultCapacityLaunchConfig72790CF7": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "ImageId": {
          "Ref": "SsmParameterValueawsserviceeksoptimizedami114amazonlinux2recommendedimageidC96584B6F00A464EAD1953AFF4B05118Parameter"
        },
        "InstanceType": "m5.large",
        "IamInstanceProfile": {
          "Ref": "ClusterDefaultCapacityInstanceProfile70387741"
        },
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "ClusterDefaultCapacityInstanceSecurityGroup8FDF4D48",
              "GroupId"
            ]
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash\nset -o xtrace\n/etc/eks/bootstrap.sh ",
                {
                  "Ref": "Cluster9EE0221C"
                },
                " --kubelet-extra-args \"--node-labels lifecycle=OnDemand\" --use-max-pods true\n/opt/aws/bin/cfn-signal --exit-code $? --stack InfraStack --resource ClusterDefaultCapacityASG00CC9431 --region us-east-2"
              ]
            ]
          }
        }
      },
      "DependsOn": [
        "ClusterDefaultCapacityInstanceRole3E209969"
      ],
      "Metadata": {
        "aws:cdk:path": "InfraStack/Cluster/DefaultCapacity/LaunchConfig"
      }
    },
    "ClusterDefaultCapacityASG00CC9431": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "MaxSize": "2",
        "MinSize": "2",
        "LaunchConfigurationName": {
          "Ref": "ClusterDefaultCapacityLaunchConfig72790CF7"
        },
        "Tags": [
          {
            "Key": "Name",
            "PropagateAtLaunch": true,
            "Value": "InfraStack/Cluster/DefaultCapacity"
          },
          {
            "Key": {
              "Fn::Join": [
                "",
                [
                  "kubernetes.io/cluster/",
                  {
                    "Ref": "Cluster9EE0221C"
                  }
                ]
              ]
            },
            "PropagateAtLaunch": true,
            "Value": "owned"
          }
        ],
        "VPCZoneIdentifier": [
          {
            "Ref": "VpcPrivateSubnet1Subnet536B997A"
          },
          {
            "Ref": "VpcPrivateSubnet2Subnet3788AAA1"
          },
          {
            "Ref": "VpcPrivateSubnet3SubnetF258B56E"
          }
        ]
      },
      "UpdatePolicy": {
        "AutoScalingRollingUpdate": {
          "WaitOnResourceSignals": false,
          "PauseTime": "PT0S",
          "SuspendProcesses": [
            "HealthCheck",
            "ReplaceUnhealthy",
            "AZRebalance",
            "AlarmNotification",
            "ScheduledActions"
          ]
        },
        "AutoScalingScheduledAction": {
          "IgnoreUnmodifiedGroupSizeProperties": true
        }
      },
      "Metadata": {
        "aws:cdk:path": "InfraStack/Cluster/DefaultCapacity/ASG"
      }
    },
    "ClusterAwsAuthmanifestFE51F8AE": {
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.InfraStackawscdkawseksKubectlProviderframeworkonEvent762CD9F5Arn"
          ]
        },
        "Manifest": {
          "Fn::Join": [
            "",
            [
              "[{\"apiVersion\":\"v1\",\"kind\":\"ConfigMap\",\"metadata\":{\"name\":\"aws-auth\",\"namespace\":\"kube-system\"},\"data\":{\"mapRoles\":\"[{\\\"rolearn\\\":\\\"",
              {
                "Fn::GetAtt": [
                  "ClusterDefaultCapacityInstanceRole3E209969",
                  "Arn"
                ]
              },
              "\\\",\\\"username\\\":\\\"system:node:{{EC2PrivateDNSName}}\\\",\\\"groups\\\":[\\\"system:bootstrappers\\\",\\\"system:nodes\\\"]}]\",\"mapUsers\":\"[]\",\"mapAccounts\":\"[]\"}}]"
            ]
          ]
        },
        "ClusterName": {
          "Ref": "Cluster9EE0221C"
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "ClusterCreationRole360249B6",
            "Arn"
          ]
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "InfraStack/Cluster/AwsAuth/manifest/Resource/Default"
      }
    },
    "awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": {
          "Fn::Join": [
            "",
            [
              "https://s3.us-east-2.",
              {
                "Ref": "AWS::URLSuffix"
              },
              "/",
              {
                "Ref": "AssetParametersb5542adb54abd49f5e6d024066408f432d861e728e7a1d65bfd616132697a02fS3Bucket5DC46B3B"
              },
              "/",
              {
                "Fn::Select": [
                  0,
                  {
                    "Fn::Split": [
                      "||",
                      {
                        "Ref": "AssetParametersb5542adb54abd49f5e6d024066408f432d861e728e7a1d65bfd616132697a02fS3VersionKey7829A958"
                      }
                    ]
                  }
                ]
              },
              {
                "Fn::Select": [
                  1,
                  {
                    "Fn::Split": [
                      "||",
                      {
                        "Ref": "AssetParametersb5542adb54abd49f5e6d024066408f432d861e728e7a1d65bfd616132697a02fS3VersionKey7829A958"
                      }
                    ]
                  }
                ]
              }
            ]
          ]
        },
        "Parameters": {
          "referencetoInfraStackAssetParametersf8180bff2a23be3f5a1fee126adab8881214d211868a8b0adc8ba767dd9d430cS3Bucket4C571E09Ref": {
            "Ref": "AssetParametersf8180bff2a23be3f5a1fee126adab8881214d211868a8b0adc8ba767dd9d430cS3Bucket78325ACE"
          },
          "referencetoInfraStackAssetParametersf8180bff2a23be3f5a1fee126adab8881214d211868a8b0adc8ba767dd9d430cS3VersionKey36DE5521Ref": {
            "Ref": "AssetParametersf8180bff2a23be3f5a1fee126adab8881214d211868a8b0adc8ba767dd9d430cS3VersionKey5DEF2AA3"
          },
          "referencetoInfraStackAssetParametersf587c683163dea7b70b883fe8f803ffe0622a40e05b3766e08ffa9ed25caabc9S3BucketCD16DCA3Ref": {
            "Ref": "AssetParametersf587c683163dea7b70b883fe8f803ffe0622a40e05b3766e08ffa9ed25caabc9S3Bucket6B4B2C9B"
          },
          "referencetoInfraStackAssetParametersf587c683163dea7b70b883fe8f803ffe0622a40e05b3766e08ffa9ed25caabc9S3VersionKey986CFD5ARef": {
            "Ref": "AssetParametersf587c683163dea7b70b883fe8f803ffe0622a40e05b3766e08ffa9ed25caabc9S3VersionKey8971BB19"
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "InfraStack/@aws-cdk--aws-eks.ClusterResourceProvider.NestedStack/@aws-cdk--aws-eks.ClusterResourceProvider.NestedStackResource"
      }
    },
    "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": {
          "Fn::Join": [
            "",
            [
              "https://s3.us-east-2.",
              {
                "Ref": "AWS::URLSuffix"
              },
              "/",
              {
                "Ref": "AssetParameters8296321feecf1ad00bf9cb4b98b13419bda18fd79793497e775bf40ff24a43d9S3Bucket0F28D1F8"
              },
              "/",
              {
                "Fn::Select": [
                  0,
                  {
                    "Fn::Split": [
                      "||",
                      {
                        "Ref": "AssetParameters8296321feecf1ad00bf9cb4b98b13419bda18fd79793497e775bf40ff24a43d9S3VersionKey6D91B330"
                      }
                    ]
                  }
                ]
              },
              {
                "Fn::Select": [
                  1,
                  {
                    "Fn::Split": [
                      "||",
                      {
                        "Ref": "AssetParameters8296321feecf1ad00bf9cb4b98b13419bda18fd79793497e775bf40ff24a43d9S3VersionKey6D91B330"
                      }
                    ]
                  }
                ]
              }
            ]
          ]
        },
        "Parameters": {
          "referencetoInfraStackAssetParameters7885982e43353796b16117389f19d46f133d2b866759b8b87c714aa408d6a25aS3BucketAFFAE9D8Ref": {
            "Ref": "AssetParameters7885982e43353796b16117389f19d46f133d2b866759b8b87c714aa408d6a25aS3BucketF848983B"
          },
          "referencetoInfraStackAssetParameters7885982e43353796b16117389f19d46f133d2b866759b8b87c714aa408d6a25aS3VersionKeyE2155DEBRef": {
            "Ref": "AssetParameters7885982e43353796b16117389f19d46f133d2b866759b8b87c714aa408d6a25aS3VersionKeyAE869E56"
          },
          "referencetoInfraStackAssetParametersf587c683163dea7b70b883fe8f803ffe0622a40e05b3766e08ffa9ed25caabc9S3BucketCD16DCA3Ref": {
            "Ref": "AssetParametersf587c683163dea7b70b883fe8f803ffe0622a40e05b3766e08ffa9ed25caabc9S3Bucket6B4B2C9B"
          },
          "referencetoInfraStackAssetParametersf587c683163dea7b70b883fe8f803ffe0622a40e05b3766e08ffa9ed25caabc9S3VersionKey986CFD5ARef": {
            "Ref": "AssetParametersf587c683163dea7b70b883fe8f803ffe0622a40e05b3766e08ffa9ed25caabc9S3VersionKey8971BB19"
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "InfraStack/@aws-cdk--aws-eks.KubectlProvider.NestedStack/@aws-cdk--aws-eks.KubectlProvider.NestedStackResource"
      }
    },
    "EcrRepoBB83A592": {
      "Type": "AWS::ECR::Repository",
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "InfraStack/EcrRepo/Resource"
      }
    }
  },
  "Outputs": {
    "ClusterClusterNameEB26049E": {
      "Value": {
        "Ref": "Cluster9EE0221C"
      }
    },
    "ClusterConfigCommand43AAE40F": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "aws eks update-kubeconfig --name ",
            {
              "Ref": "Cluster9EE0221C"
            },
            " --region us-east-2"
          ]
        ]
      }
    },
    "ClusterGetTokenCommand06AE992E": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "aws eks get-token --cluster-name ",
            {
              "Ref": "Cluster9EE0221C"
            },
            " --region us-east-2"
          ]
        ]
      }
    }
  },
  "Parameters": {
    "AssetParametersf8180bff2a23be3f5a1fee126adab8881214d211868a8b0adc8ba767dd9d430cS3Bucket78325ACE": {
      "Type": "String",
      "Description": "S3 bucket for asset \"f8180bff2a23be3f5a1fee126adab8881214d211868a8b0adc8ba767dd9d430c\""
    },
    "AssetParametersf8180bff2a23be3f5a1fee126adab8881214d211868a8b0adc8ba767dd9d430cS3VersionKey5DEF2AA3": {
      "Type": "String",
      "Description": "S3 key for asset version \"f8180bff2a23be3f5a1fee126adab8881214d211868a8b0adc8ba767dd9d430c\""
    },
    "AssetParametersf8180bff2a23be3f5a1fee126adab8881214d211868a8b0adc8ba767dd9d430cArtifactHashB9A9C46C": {
      "Type": "String",
      "Description": "Artifact hash for asset \"f8180bff2a23be3f5a1fee126adab8881214d211868a8b0adc8ba767dd9d430c\""
    },
    "AssetParametersf587c683163dea7b70b883fe8f803ffe0622a40e05b3766e08ffa9ed25caabc9S3Bucket6B4B2C9B": {
      "Type": "String",
      "Description": "S3 bucket for asset \"f587c683163dea7b70b883fe8f803ffe0622a40e05b3766e08ffa9ed25caabc9\""
    },
    "AssetParametersf587c683163dea7b70b883fe8f803ffe0622a40e05b3766e08ffa9ed25caabc9S3VersionKey8971BB19": {
      "Type": "String",
      "Description": "S3 key for asset version \"f587c683163dea7b70b883fe8f803ffe0622a40e05b3766e08ffa9ed25caabc9\""
    },
    "AssetParametersf587c683163dea7b70b883fe8f803ffe0622a40e05b3766e08ffa9ed25caabc9ArtifactHash72EE40C1": {
      "Type": "String",
      "Description": "Artifact hash for asset \"f587c683163dea7b70b883fe8f803ffe0622a40e05b3766e08ffa9ed25caabc9\""
    },
    "AssetParameters7885982e43353796b16117389f19d46f133d2b866759b8b87c714aa408d6a25aS3BucketF848983B": {
      "Type": "String",
      "Description": "S3 bucket for asset \"7885982e43353796b16117389f19d46f133d2b866759b8b87c714aa408d6a25a\""
    },
    "AssetParameters7885982e43353796b16117389f19d46f133d2b866759b8b87c714aa408d6a25aS3VersionKeyAE869E56": {
      "Type": "String",
      "Description": "S3 key for asset version \"7885982e43353796b16117389f19d46f133d2b866759b8b87c714aa408d6a25a\""
    },
    "AssetParameters7885982e43353796b16117389f19d46f133d2b866759b8b87c714aa408d6a25aArtifactHash741C1231": {
      "Type": "String",
      "Description": "Artifact hash for asset \"7885982e43353796b16117389f19d46f133d2b866759b8b87c714aa408d6a25a\""
    },
    "AssetParameters8296321feecf1ad00bf9cb4b98b13419bda18fd79793497e775bf40ff24a43d9S3Bucket0F28D1F8": {
      "Type": "String",
      "Description": "S3 bucket for asset \"8296321feecf1ad00bf9cb4b98b13419bda18fd79793497e775bf40ff24a43d9\""
    },
    "AssetParameters8296321feecf1ad00bf9cb4b98b13419bda18fd79793497e775bf40ff24a43d9S3VersionKey6D91B330": {
      "Type": "String",
      "Description": "S3 key for asset version \"8296321feecf1ad00bf9cb4b98b13419bda18fd79793497e775bf40ff24a43d9\""
    },
    "AssetParameters8296321feecf1ad00bf9cb4b98b13419bda18fd79793497e775bf40ff24a43d9ArtifactHash43B31853": {
      "Type": "String",
      "Description": "Artifact hash for asset \"8296321feecf1ad00bf9cb4b98b13419bda18fd79793497e775bf40ff24a43d9\""
    },
    "AssetParametersb5542adb54abd49f5e6d024066408f432d861e728e7a1d65bfd616132697a02fS3Bucket5DC46B3B": {
      "Type": "String",
      "Description": "S3 bucket for asset \"b5542adb54abd49f5e6d024066408f432d861e728e7a1d65bfd616132697a02f\""
    },
    "AssetParametersb5542adb54abd49f5e6d024066408f432d861e728e7a1d65bfd616132697a02fS3VersionKey7829A958": {
      "Type": "String",
      "Description": "S3 key for asset version \"b5542adb54abd49f5e6d024066408f432d861e728e7a1d65bfd616132697a02f\""
    },
    "AssetParametersb5542adb54abd49f5e6d024066408f432d861e728e7a1d65bfd616132697a02fArtifactHashE3D6E4B1": {
      "Type": "String",
      "Description": "Artifact hash for asset \"b5542adb54abd49f5e6d024066408f432d861e728e7a1d65bfd616132697a02f\""
    },
    "SsmParameterValueawsserviceeksoptimizedami114amazonlinux2recommendedimageidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/aws/service/eks/optimized-ami/1.14/amazon-linux-2/recommended/image_id"
    }
  }
}