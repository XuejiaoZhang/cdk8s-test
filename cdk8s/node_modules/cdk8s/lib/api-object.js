"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const core_1 = require("@aws-cdk/core");
const chart_1 = require("./chart");
class ApiObject extends core_1.Construct {
    /**
     * Defines an API object.
     *
     * @param scope the construct scope
     * @param ns namespace
     * @param options options
     */
    constructor(scope, ns, options) {
        var _a, _b;
        super(scope, ns);
        this.options = options;
        this.chart = chart_1.Chart.of(this);
        this.kind = options.kind;
        this.apiVersion = options.apiVersion;
        this.name = (_b = (_a = options.metadata) === null || _a === void 0 ? void 0 : _a.name, (_b !== null && _b !== void 0 ? _b : this.chart.generateObjectName(this)));
    }
    /**
     * Renders the object to Kubernetes config.
     * @internal
     */
    _render() {
        return {
            ...this.options,
            metadata: {
                ...this.options.metadata,
                name: this.name
            }
        };
    }
}
exports.ApiObject = ApiObject;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBpLW9iamVjdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImFwaS1vYmplY3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSx3Q0FBMEM7QUFDMUMsbUNBQWdDO0FBa0VoQyxNQUFhLFNBQVUsU0FBUSxnQkFBUztJQXlCdEM7Ozs7OztPQU1HO0lBQ0gsWUFBWSxLQUFnQixFQUFFLEVBQVUsRUFBbUIsT0FBeUI7O1FBQ2xGLEtBQUssQ0FBQyxLQUFLLEVBQUUsRUFBRSxDQUFDLENBQUM7UUFEd0MsWUFBTyxHQUFQLE9BQU8sQ0FBa0I7UUFFbEYsSUFBSSxDQUFDLEtBQUssR0FBRyxhQUFLLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzVCLElBQUksQ0FBQyxJQUFJLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQztRQUN6QixJQUFJLENBQUMsVUFBVSxHQUFHLE9BQU8sQ0FBQyxVQUFVLENBQUM7UUFDckMsSUFBSSxDQUFDLElBQUksZUFBRyxPQUFPLENBQUMsUUFBUSwwQ0FBRSxJQUFJLHVDQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsa0JBQWtCLENBQUMsSUFBSSxDQUFDLEVBQUEsQ0FBQztJQUM1RSxDQUFDO0lBRUQ7OztPQUdHO0lBQ0ksT0FBTztRQUNaLE9BQU87WUFDTCxHQUFHLElBQUksQ0FBQyxPQUFPO1lBQ2YsUUFBUSxFQUFFO2dCQUNSLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRO2dCQUN4QixJQUFJLEVBQUUsSUFBSSxDQUFDLElBQUk7YUFDaEI7U0FDRixDQUFDO0lBQ0osQ0FBQztDQUNGO0FBckRELDhCQXFEQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbnN0cnVjdCB9IGZyb20gJ0Bhd3MtY2RrL2NvcmUnO1xuaW1wb3J0IHsgQ2hhcnQgfSBmcm9tICcuL2NoYXJ0JztcblxuLyoqXG4gKiBNZXRhZGF0YSBhc3NvY2lhdGVkIHdpdGggdGhpcyBvYmplY3QuXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgQXBpT2JqZWN0TWV0YWRhdGEge1xuICAvKipcbiAgICogVGhlIHVuaXF1ZSwgbmFtZXNwYWNlLWdsb2JhbCwgbmFtZSBvZiB0aGlzIG9iamVjdCBpbnNpZGUgdGhlIEt1YmVybmV0ZXNcbiAgICogY2x1c3Rlci5cbiAgICpcbiAgICogTm9ybWFsbHksIHlvdSBzaG91bGRuJ3Qgc3BlY2lmeSBuYW1lcyBmb3Igb2JqZWN0cyBhbmQgbGV0IHRoZSBDREsgZ2VuZXJhdGVcbiAgICogYSBuYW1lIGZvciB5b3UgdGhhdCBpcyBhcHBsaWNhdGlvbi11bmlxdWUuIFRoZSBuYW1lcyBDREsgZ2VuZXJhdGVzIGFyZVxuICAgKiBjb21wb3NlZCBmcm9tIHRoZSBjb25zdHJ1Y3QgcGF0aCBjb21wb25lbnRzLCBzZXBhcmF0ZWQgYnkgZG90cyBhbmQgYSBzdWZmaXhcbiAgICogdGhhdCBpcyBiYXNlZCBvbiBhIGhhc2ggb2YgdGhlIGVudGlyZSBwYXRoLCB0byBlbnN1cmUgdW5pcXVlbmVzcy5cbiAgICpcbiAgICogWW91IGNhbiBzdXBwbHkgY3VzdG9tIG5hbWUgYWxsb2NhdGlvbiBsb2dpYyBieSBvdmVycmlkaW5nIHRoZVxuICAgKiBgY2hhcnQuZ2VuZXJhdGVPYmplY3ROYW1lYCBtZXRob2QuXG4gICAqXG4gICAqIElmIHlvdSB1c2UgYW4gZXhwbGljaXQgbmFtZSBoZXJlLCBiZWFyIGluIG1pbmQgdGhhdCB0aGlzIHJlZHVjZXMgdGhlXG4gICAqIGNvbXBvc2FiaWxpdHkgb2YgeW91ciBjb25zdHJ1Y3QgYmVjYXVzZSBpdCB3b24ndCBiZSBwb3NzaWJsZSB0byBpbmNsdWRlXG4gICAqIG1vcmUgdGhhbiBvbmUgaW5zdGFuY2UgaW4gYW55IGFwcC4gVGhlcmVmb3JlIGl0IGlzIGhpZ2hseSByZWNvbW1lbmRlZCB0b1xuICAgKiBsZWF2ZSB0aGlzIHVuc3BlY2lmaWVkLlxuICAgKlxuICAgKiBAZGVmYXVsdCAtIGFuIGFwcC11bmlxdWUgbmFtZSBnZW5lcmF0ZWQgYnkgdGhlIGNoYXJ0XG4gICAqL1xuICByZWFkb25seSBuYW1lPzogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBBcmJpdHJhcnkga2V5L3ZhbHVlIG1ldGFkYXRhLlxuICAgKi9cbiAgcmVhZG9ubHkgW2tleTogc3RyaW5nXTogYW55O1xufVxuXG4vKipcbiAqIE9wdGlvbnMgZm9yIGRlZmluaW5nIEFQSSBvYmplY3RzLlxuICovXG5leHBvcnQgaW50ZXJmYWNlIEFwaU9iamVjdE9wdGlvbnMge1xuICAvKipcbiAgICogRGF0YSBhc3NvY2lhdGVkIHdpdGggdGhlIHJlc291cmNlLlxuICAgKi9cbiAgcmVhZG9ubHkgZGF0YT86IGFueTtcblxuICAvKipcbiAgICogT2JqZWN0IG1ldGFkYXRhLlxuICAgKlxuICAgKiBJZiBgbmFtZWAgaXMgbm90IHNwZWNpZmllZCwgYW4gYXBwLXVuaXF1ZSBuYW1lIHdpbGwgYmUgYWxsb2NhdGVkIGJ5IHRoZVxuICAgKiBmcmFtZXdvcmsgYmFzZWQgb24gdGhlIHBhdGggb2YgdGhlIGNvbnN0cnVjdCB3aXRoaW4gdGhlcyBjb25zdHJ1Y3QgdHJlZS5cbiAgICovXG4gIHJlYWRvbmx5IG1ldGFkYXRhPzogQXBpT2JqZWN0TWV0YWRhdGE7ICBcblxuICAvKipcbiAgICogQVBJIHZlcnNpb24uXG4gICAqL1xuICByZWFkb25seSBhcGlWZXJzaW9uOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIFJlc291cmNlIGtpbmQuXG4gICAqL1xuICByZWFkb25seSBraW5kOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIEFkZGl0aW9uYWwgYXR0cmlidXRlcyBmb3IgdGhpcyBBUEkgb2JqZWN0LlxuICAgKi9cbiAgcmVhZG9ubHkgW2tleTogc3RyaW5nXTogYW55O1xufVxuXG5leHBvcnQgY2xhc3MgQXBpT2JqZWN0IGV4dGVuZHMgQ29uc3RydWN0IHtcblxuICAvKipcbiAgICogVGhlIGFwcC11bmlxdWUgbmFtZSBvZiB0aGUgb2JqZWN0LlxuICAgKlxuICAgKiBUaGUgbmFtZSBpcyBhbGxvY2F0ZWQgYmFzZWQgb24gdGhlIHBhdGggb2YgdGhlIG9iamVjdCBjb25zdHJ1Y3Qgd2l0aGluIHRoZVxuICAgKiBjb25zdHJ1Y3QgdHJlZS5cbiAgICovXG4gIHB1YmxpYyByZWFkb25seSBuYW1lOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIFRoZSBvYmplY3QncyBBUEkgdmVyc2lvbi5cbiAgICovXG4gIHB1YmxpYyByZWFkb25seSBhcGlWZXJzaW9uOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIFRoZSBvYmplY3Qga2luZC5cbiAgICovXG4gIHB1YmxpYyByZWFkb25seSBraW5kOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIFRoZSBjaGFydCBpbiB3aGljaCB0aGlzIG9iamVjdCBpcyBkZWZpbmVkLlxuICAgKi9cbiAgcHVibGljIHJlYWRvbmx5IGNoYXJ0OiBDaGFydDtcblxuICAvKipcbiAgICogRGVmaW5lcyBhbiBBUEkgb2JqZWN0LlxuICAgKiBcbiAgICogQHBhcmFtIHNjb3BlIHRoZSBjb25zdHJ1Y3Qgc2NvcGVcbiAgICogQHBhcmFtIG5zIG5hbWVzcGFjZVxuICAgKiBAcGFyYW0gb3B0aW9ucyBvcHRpb25zXG4gICAqL1xuICBjb25zdHJ1Y3RvcihzY29wZTogQ29uc3RydWN0LCBuczogc3RyaW5nLCBwcml2YXRlIHJlYWRvbmx5IG9wdGlvbnM6IEFwaU9iamVjdE9wdGlvbnMpIHtcbiAgICBzdXBlcihzY29wZSwgbnMpO1xuICAgIHRoaXMuY2hhcnQgPSBDaGFydC5vZih0aGlzKTtcbiAgICB0aGlzLmtpbmQgPSBvcHRpb25zLmtpbmQ7XG4gICAgdGhpcy5hcGlWZXJzaW9uID0gb3B0aW9ucy5hcGlWZXJzaW9uO1xuICAgIHRoaXMubmFtZSA9IG9wdGlvbnMubWV0YWRhdGE/Lm5hbWUgPz8gdGhpcy5jaGFydC5nZW5lcmF0ZU9iamVjdE5hbWUodGhpcyk7XG4gIH1cblxuICAvKipcbiAgICogUmVuZGVycyB0aGUgb2JqZWN0IHRvIEt1YmVybmV0ZXMgY29uZmlnLlxuICAgKiBAaW50ZXJuYWxcbiAgICovXG4gIHB1YmxpYyBfcmVuZGVyKCk6IGFueSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIC4uLnRoaXMub3B0aW9ucyxcbiAgICAgIG1ldGFkYXRhOiB7XG4gICAgICAgIC4uLnRoaXMub3B0aW9ucy5tZXRhZGF0YSxcbiAgICAgICAgbmFtZTogdGhpcy5uYW1lXG4gICAgICB9XG4gICAgfTtcbiAgfVxufVxuXG4iXX0=