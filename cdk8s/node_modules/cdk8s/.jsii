{
  "author": {
    "name": "Amazon Web Services",
    "roles": [
      "author"
    ],
    "url": "https://aws.amazon.com"
  },
  "bundled": {
    "yaml": "^1.7.2"
  },
  "dependencies": {
    "@aws-cdk/core": "^1.24.0",
    "@aws-cdk/cx-api": "^1.24.0"
  },
  "dependencyClosure": {
    "@aws-cdk/core": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK",
          "packageId": "Amazon.CDK",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "core",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.core"
        },
        "js": {
          "npm": "@aws-cdk/core"
        },
        "python": {
          "distName": "aws-cdk.core",
          "module": "aws_cdk.core"
        }
      }
    },
    "@aws-cdk/cx-api": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CXAPI",
          "packageId": "Amazon.CDK.CXAPI",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cx-api",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cxapi"
        },
        "js": {
          "npm": "@aws-cdk/cx-api"
        },
        "python": {
          "distName": "aws-cdk.cx-api",
          "module": "aws_cdk.cx_api"
        }
      }
    }
  },
  "description": "Cloud Development Kit for Kubernetes",
  "docs": {
    "stability": "experimental"
  },
  "homepage": "https://github.com/awslabs/cdk8s",
  "jsiiVersion": "0.22.0",
  "license": "Apache-2.0",
  "name": "cdk8s",
  "readme": {
    "markdown": "# cdk8s\n\n> Cloud Development Kit for Kubernetes\n\n**cdk8s** is a software development framework for defining Kubernetes\napplications using rich object-oriented APIs. It allows developers to leverage\nthe full power of software in order to define abstract components called\n\"constructs\" which compose Kubernetes resources or other constructs into\nhigher-level abstractions.\n\nThis library is the foundation of **cdk8s**. It includes base types that are\nused to define cdk8s applications.\n\n## Chart\n\nThe `Chart` is a container that synthesizes a single Kubernetes manifest.\n\n```ts\nclass MyChart extends Chart {\n  constructor(scope: Construct, ns: string) {\n    super(scope, ns);\n\n    // add contents here\n  }\n}\n```\n\nDuring synthesis, charts collect all the `ApiObject` nodes (recursively) and\nemit a single YAML manifest that includes all these objects.\n\n## ApiObject\n\nAn `ApiObject` is a construct that represents an entry in a Kubernetes manifest.\nIn most cases, you won't use `ApiObject` directly but rather use classes that\nare generated by the cdk8s CLI and extend this base class.\n\n\n### Testing\n\ncdk8s bundles a set of test utilities under the `Testing` class:\n\n* `Testing.app()` returns an `App` object bound to a temporary output directory.\n* `Testing.synth(chart)` returns the Kubernetes manifest synthesized from a\n  chart.\n\n\n\n## License\n\nThis project is distributed under the [Apache License, Version 2.0](./LICENSE).\n\nThis module is part of the [cdk8s project](https://github.com/awslabs/cdk8s).\n"
  },
  "repository": {
    "directory": "packages/cdk8s",
    "type": "git",
    "url": "https://github.com/awslabs/cdk8s.git"
  },
  "schema": "jsii/0.10.0",
  "targets": {
    "dotnet": {
      "namespace": "Org.Cdk8s",
      "packageId": "Org.Cdk8s"
    },
    "java": {
      "maven": {
        "artifactId": "cdk8s",
        "groupId": "org.cdk8s"
      },
      "package": "org.cdk8s"
    },
    "js": {
      "npm": "cdk8s"
    },
    "python": {
      "distName": "cdk8s",
      "module": "cdk8s"
    }
  },
  "types": {
    "cdk8s.ApiObject": {
      "assembly": "cdk8s",
      "base": "@aws-cdk/core.Construct",
      "docs": {
        "stability": "experimental"
      },
      "fqn": "cdk8s.ApiObject",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Defines an API object."
        },
        "parameters": [
          {
            "docs": {
              "summary": "the construct scope."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "namespace."
            },
            "name": "ns",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "options."
            },
            "name": "options",
            "type": {
              "fqn": "cdk8s.ApiObjectOptions"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/api-object.ts",
        "line": 68
      },
      "name": "ApiObject",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "The object's API version."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/api-object.ts",
            "line": 81
          },
          "name": "apiVersion",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The chart in which this object is defined."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/api-object.ts",
            "line": 91
          },
          "name": "chart",
          "type": {
            "fqn": "cdk8s.Chart"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The object kind."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/api-object.ts",
            "line": 86
          },
          "name": "kind",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "remarks": "The name is allocated based on the path of the object construct within the\nconstruct tree.",
            "stability": "experimental",
            "summary": "The app-unique name of the object."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/api-object.ts",
            "line": 76
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "cdk8s.ApiObjectMetadata": {
      "assembly": "cdk8s",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Metadata associated with this object."
      },
      "fqn": "cdk8s.ApiObjectMetadata",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/api-object.ts",
        "line": 7
      },
      "name": "ApiObjectMetadata",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- an app-unique name generated by the chart",
            "remarks": "Normally, you shouldn't specify names for objects and let the CDK generate\na name for you that is application-unique. The names CDK generates are\ncomposed from the construct path components, separated by dots and a suffix\nthat is based on a hash of the entire path, to ensure uniqueness.\n\nYou can supply custom name allocation logic by overriding the\n`chart.generateObjectName` method.\n\nIf you use an explicit name here, bear in mind that this reduces the\ncomposability of your construct because it won't be possible to include\nmore than one instance in any app. Therefore it is highly recommended to\nleave this unspecified.",
            "stability": "experimental",
            "summary": "The unique, namespace-global, name of this object inside the Kubernetes cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/api-object.ts",
            "line": 27
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "cdk8s.ApiObjectOptions": {
      "assembly": "cdk8s",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Options for defining API objects."
      },
      "fqn": "cdk8s.ApiObjectOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/api-object.ts",
        "line": 38
      },
      "name": "ApiObjectOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "API version."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/api-object.ts",
            "line": 55
          },
          "name": "apiVersion",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Resource kind."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/api-object.ts",
            "line": 60
          },
          "name": "kind",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Data associated with the resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/api-object.ts",
            "line": 42
          },
          "name": "data",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "If `name` is not specified, an app-unique name will be allocated by the\nframework based on the path of the construct within thes construct tree.",
            "stability": "experimental",
            "summary": "Object metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/api-object.ts",
            "line": 50
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s.ApiObjectMetadata"
          }
        }
      ]
    },
    "cdk8s.App": {
      "assembly": "cdk8s",
      "base": "@aws-cdk/core.Construct",
      "docs": {
        "stability": "experimental",
        "summary": "Represents a cdk8s application."
      },
      "fqn": "cdk8s.App",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Defines an app."
        },
        "parameters": [
          {
            "docs": {
              "summary": "configuration options."
            },
            "name": "options",
            "optional": true,
            "type": {
              "fqn": "cdk8s.AppOptions"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/app.ts",
        "line": 17
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Synthesizes all manifests to the output directory."
          },
          "locationInModule": {
            "filename": "lib/app.ts",
            "line": 35
          },
          "name": "synth"
        }
      ],
      "name": "App",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "The output directory into which manifests will be synthesized."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/app.ts",
            "line": 21
          },
          "name": "outdir",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "cdk8s.AppOptions": {
      "assembly": "cdk8s",
      "datatype": true,
      "docs": {
        "stability": "experimental"
      },
      "fqn": "cdk8s.AppOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/app.ts",
        "line": 5
      },
      "name": "AppOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "\"dist\"",
            "stability": "experimental",
            "summary": "The directory to output Kubernetes manifests."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/app.ts",
            "line": 11
          },
          "name": "outdir",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "cdk8s.Chart": {
      "assembly": "cdk8s",
      "base": "@aws-cdk/core.Construct",
      "docs": {
        "stability": "experimental"
      },
      "fqn": "cdk8s.Chart",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "name": "ns",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/chart.ts",
        "line": 10
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Finds the chart in which a node is defined."
          },
          "locationInModule": {
            "filename": "lib/chart.ts",
            "line": 16
          },
          "name": "of",
          "parameters": [
            {
              "docs": {
                "summary": "a construct node."
              },
              "name": "node",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s.Chart"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "Different resource types may have different constraints on names\n(`metadata.name`). The previous version of the name generator was\ncompatible with DNS_SUBDOMAIN but not with DNS_LABEL.\n\nFor example, `Deployment` names must comply with DNS_SUBDOMAIN while\n`Service` names must comply with DNS_LABEL.\n\nSince there is no formal specification for this, the default name\ngeneration scheme for kubernetes objects in cdk8s was changed to DNS_LABEL,\nsince it’s the common denominator for all kubernetes resources\n(supposedly).\n\nYou can override this method if you wish to customize object names at the\nchart level.",
            "stability": "experimental",
            "summary": "Generates a app-unique name for an object given it's construct node path."
          },
          "locationInModule": {
            "filename": "lib/chart.ts",
            "line": 60
          },
          "name": "generateObjectName",
          "parameters": [
            {
              "docs": {
                "summary": "The API object to generate a name for."
              },
              "name": "apiObject",
              "type": {
                "fqn": "cdk8s.ApiObject"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        },
        {
          "docs": {
            "remarks": "This method is usually implemented by framework-level constructs such as `Stack` and `Asset`\nas they participate in synthesizing the cloud assembly.",
            "stability": "experimental",
            "summary": "Allows this construct to emit artifacts into the cloud assembly during synthesis."
          },
          "locationInModule": {
            "filename": "lib/chart.ts",
            "line": 64
          },
          "name": "synthesize",
          "overrides": "@aws-cdk/core.Construct",
          "parameters": [
            {
              "name": "session",
              "type": {
                "fqn": "@aws-cdk/core.ISynthesisSession"
              }
            }
          ],
          "protected": true
        }
      ],
      "name": "Chart",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "The name of the stack's YAML file as emitted into the cloud assembly directory during synthesis."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/chart.ts",
            "line": 33
          },
          "name": "manifestFile",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "cdk8s.Testing": {
      "assembly": "cdk8s",
      "docs": {
        "stability": "experimental",
        "summary": "Testing utilities for cdk8s applications."
      },
      "fqn": "cdk8s.Testing",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/testing.ts",
        "line": 10
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Returns an app for testing with the following properties: - Output directory is a temp dir."
          },
          "locationInModule": {
            "filename": "lib/testing.ts",
            "line": 15
          },
          "name": "app",
          "returns": {
            "type": {
              "fqn": "cdk8s.App"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Returns the Kubernetes manifest synthesized from this chart."
          },
          "locationInModule": {
            "filename": "lib/testing.ts",
            "line": 23
          },
          "name": "synth",
          "parameters": [
            {
              "name": "chart",
              "type": {
                "fqn": "cdk8s.Chart"
              }
            }
          ],
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "array"
              }
            }
          },
          "static": true
        }
      ],
      "name": "Testing"
    }
  },
  "version": "0.12.0",
  "fingerprint": "gEng5gC0C7czh4YGxUOHtLKOAdHjPfRHfPHrK44onlg="
}
